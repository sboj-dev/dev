{"version":3,"sources":["global/colors.js","job/JobViewRecruiterSubSection.js","global/tags/TechTag.js","global/ExternalLink.js","job/JobViewExtraInfoSubSection.js","job/JobViewSocialSubSection.js","job/JobTab.js","global/Currency.js","job/BenefitsTab.js","job/CompanyTab.js","global/styles.js","global/mock.js","Responsive.js","Job.js","Jobs.js","global/tags/DeletableTechTag.js","ListInput.js","PostBasicInfo.js","PostSalaryBenefits.js","PostJobDescription.js","global/buttons/BackButton.js","Post.js","global/Logo.js","ResponsiveGrid.js","App.js","serviceWorker.js","index.js"],"names":["Purple","White","JobViewRecruiterSubSection","params","Box","fill","background","gridArea","pad","margin","bottom","direction","gap","Avatar","src","recruiter","profile_picture","size","name","style","fontWeight","fontSize","color","title","organization","Array","rating","map","Star","TechTag","backgroundColor","border","padding","textAlign","textDecoration","display","borderRadius","label","ExternalLink","href","target","rel","JobViewExtraInfoSubSection","Heading","website","align","techStack","text","Text","location","JobViewSocialSubSection","Button","plain","icon","LinkedinOption","social","linkedin","Twitter","twitter","Instagram","instagram","Job","description","marginBottom","responsibilities","StatusGood","marginTop","marginLeft","lineHeight","experiences","businessTravel","Currency","currency","BenefitsTab","benefits","salary","min","max","bonus","remoteWorking","Object","entries","bonusStructure","value","holiday","equity","healthcare","other","CompanyTab","Stack","anchor","height","Image","fit","company","cover_picture","elevatorPitch","info","SBOJTheme","brand","light","font","family","button","CustomizeTheme","customTheme","console","log","grommet","names","pictures","Responsive","children","areas","overrideColumns","overrideRows","props","ResponsiveContext","Consumer","columnsVal","columns","rowsVal","rows","areasVal","isArray","Grid","undefined","small","medium","large","xlarge","xxlarge","fixedGridAreas","start","end","getRandomInt","Math","ceil","floor","random","useParams","id","fetch","then","res","json","result","React","useState","index","setIndex","theme","tab","active","extend","css","tabs","randomName","length","randomPicture","job","founded","socialMedia","position","employment","buttonApplied","setButtonApplied","hideApplyButton","primary","onClick","Grommet","Tabs","activeIndex","onActive","nextIndex","justify","Tab","JobTab","data","to","Home","List","datum","key","weight","DeletableTechTag","FormClose","left","ListInput","width","round","TextInput","onChange","onKeyPress","placeholder","AddCircle","iconOnClick","PostBasicInfo","techStackInput","setTechStackInput","event","setPosition","push","setTechStack","hidden","i","splice","setLocation","RadioButton","checked","employmentType","setEmploymentType","setRemoteWorking","setBusinessTravel","PostSalaryBenefits","otherBenefitsInput","setOtherBenefitsInput","bonusInput","setBonusInput","onChangeBonusStructureSlider","setBonusStructure","Select","options","option","setCurrency","MaskedInput","mask","regexp","minSalary","setMinSalary","maxSalary","setMaxSalary","setBonus","cursor","right","RangeInput","setEquity","setHoliday","setHealthcare","onSelect","otherBenefits","suggestion","setOtherBenefits","suggestions","otherBenefitSuggestions","dropProps","PostJobDescription","TextArea","setDescription","resize","responsibility1","setResponsibility1","responsibility2","setResponsibility2","responsibility3","setResponsibility3","responsibility4","setResponsibility4","responsibility5","setResponsibility5","experience1","setExperience1","experience2","setExperience2","experience3","setExperience3","experience4","setExperience4","experience5","setExperience5","BackButton","FormPreviousLink","isEmpty","str","Post","setTrackStack","isBasicInfoComplete","isSalaryBenefitsComplete","isJobDescriptionComplete","buttonPublished","setButtonPublished","Layer","onEsc","onClickOutside","process","isComplete","FormNextLink","reverse","JSON","stringify","disabled","Send","RichTabTitle","Logo","fontFamily","userSelect","ResponsiveGrid","App","basename","full","Header","className","exact","path","component","Jobs","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c1dbe5e.chunk.js","sourcesContent":["export const Charchoal = '#444444'\nexport const LightGrey = '#BABABA'\nexport const Grey = '#7D7D7D'\nexport const Turquoise = '#08CAA1'\nexport const Purple = '#956EDC'\nexport const Lilac = '#B291F2'\nexport const White = '#FFFFFF'\n\nexport const TwitterBlue = '#03A9F3'\nexport const LinkedinBlue = '#006699'\nexport const InstagramRed = '#FF0700'","import React from 'react'\nimport { Box, Avatar } from 'grommet'\nimport { Star } from 'grommet-icons'\nimport { Grey } from '../global/colors'\n\nfunction JobViewRecruiterSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin={{bottom: 'medium'}}>\n            <Box direction='row' gap='small'>\n                <Avatar src={params.recruiter.profile_picture} size='large' />\n                <div>\n                    <div>{params.recruiter.name}</div>\n                    <div style={{\n                        fontWeight: 'bold',\n                        fontSize: 14,\n                        color: Grey,\n                    }}>{params.recruiter.title} @ {params.recruiter.organization}</div>\n                    <div>\n                        {[...Array(params.recruiter.rating)].map(name => (\n                            <Star color={Grey} size='small' />\n                        ))}\n                    </div>\n                </div>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewRecruiterSubSection;\n","import React from 'react'\nimport { Purple, White } from '../colors'\n\nfunction TechTag(params) {\n  return (\n    <div style={{\n      backgroundColor: Purple,\n      border: 'none',\n      color: White,\n      margin: 4,\n      padding: '4px 8px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-block',\n      borderRadius: '16px',\n      fontSize: '12px'\n    }}>\n      {params.label}\n    </div>\n  );\n}\n\nexport default TechTag","import React from 'react'\nimport { Turquoise } from '../global/colors'\n\nfunction ExternalLink(params) {\n    return (\n        <a style={{\n            color: Turquoise,\n            textDecoration: 'none'\n        }} href={params.href} target='_blank' rel=\"noopener noreferrer\">{params.href}</a>\n    );\n}\n\nexport default ExternalLink;\n","import React from 'react'\nimport { Box, Heading, Text } from 'grommet'\nimport { LightGrey } from '../global/colors'\nimport TechTag from '../global/tags/TechTag'\nimport ExternalLink from '../global/ExternalLink'\n\nfunction JobViewExtraInfoSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin={{bottom: 'medium'}}>\n            <Heading size='18px' margin='none' color={LightGrey}>WEBSITE</Heading>\n            <Box pad='small' direction='row'>\n                <ExternalLink href={params.website} />\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>TECH STACK</Heading>\n            <Box align='center' direction='row'>\n                {params.techStack && params.techStack.map(text => (\n                    <TechTag label={text} />\n                ))}\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>LOCATION</Heading>\n            <Box pad='small' direction='row'>\n                <Text>{params.location}</Text>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewExtraInfoSubSection;\n","import React from 'react'\nimport { Box, Heading, Text, Button } from 'grommet'\nimport { Twitter, LinkedinOption, Instagram } from 'grommet-icons'\nimport { LightGrey, TwitterBlue, LinkedinBlue, InstagramRed } from '../global/colors'\n\nfunction JobViewSocialSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin={{bottom: 'medium'}}>\n            <Heading size='18px' margin='none' color={LightGrey}>SOCIAL</Heading>\n            <Box pad='none' direction='row'>\n                <Box pad='small'>\n                    <Button plain icon={<LinkedinOption color={LinkedinBlue} />} href={params.social.linkedin} target='_blank' />\n                </Box>\n                <Box pad='small'>\n                    <Button plain icon={<Twitter color={TwitterBlue} />} href={params.social.twitter} target='_blank' />\n                </Box>\n                <Box pad='small'>\n                    <Button plain icon={<Instagram color={InstagramRed} />} href={params.social.instagram} target='_blank' />\n                </Box>\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>POSTED</Heading>\n            <Box pad='small' direction='row'>\n                <Text>New - 2 hours ago</Text>\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>EMPLOYMENT</Heading>\n            <Box pad='small' direction='row'>\n                <Text>Permanent</Text>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewSocialSubSection;\n","import React from 'react'\nimport { Box } from 'grommet'\n\nimport { StatusGood } from 'grommet-icons'\nimport { Turquoise } from '../global/colors'\n\nfunction Job(params) {\n  return (\n    <Box fill background='#FFFFFF' gridArea='main' pad='small'>\n      {params.description}\n      <h3 style={{ marginBottom: 8 }}>Job Responsibilities:</h3>\n      {params.responsibilities.map(text => (\n        <div>\n          {text !== '' &&\n            <Box pad='small' direction='row' >\n              <StatusGood color={Turquoise} size='small' style={{ marginTop: 4 }} />\n              <div style={{ marginLeft: 4, lineHeight: 1 }}>{text}</div>\n            </Box>\n          }\n        </div>\n      ))}\n      <h3 style={{ marginBottom: 8 }}>Required Experience:</h3>\n      {params.experiences.map(text => (\n        <div>\n          {text !== '' &&\n            <Box pad='small' direction='row' >\n              <StatusGood color={Turquoise} size='small' style={{ marginTop: 4 }} />\n              <div style={{ marginLeft: 4, lineHeight: 1 }}>{text}</div>\n            </Box>\n          }\n        </div>\n      ))}\n      {params.businessTravel && params.businessTravel !== '0' &&\n        <h3> Business Travel: {params.businessTravel}%</h3>\n      }\n    </Box >\n  );\n}\n\nexport default Job;\n","import React from 'react'\n\nfunction Currency(params) {\n    if (params.currency === 'GBP') {\n        return (\n            <span>£</span>\n        );\n    }\n    if (params.currency === 'USD') {\n        return (\n            <span>$</span>\n        );\n    }\n    if (params.currency === 'EUR') {\n        return (\n            <span>€</span>\n        );\n    }\n    return <span />\n}\n\nexport default Currency","import React from 'react'\nimport { Box, Heading } from 'grommet'\n\nimport { LightGrey } from '../global/colors'\nimport Currency from '../global/Currency'\n\n\nfunction BenefitsTab(params) {\n  return (\n    <Box fill background='#FFFFFF' gridArea='main' pad='small'>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>SALARY</Heading>\n        <Box direction='row'>\n          <Currency currency={params.benefits.salary.currency} />{params.benefits.salary.min} - <Currency currency={params.benefits.salary.currency} />{params.benefits.salary.max} + <Currency currency={params.benefits.salary.currency} />{params.benefits.bonus} bonus\n        </Box>\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>REMOTE WORKING</Heading>\n        {params.benefits.remoteWorking}\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>BONUS STRUCTURE</Heading>\n        {Object.entries(params.benefits.bonusStructure).map(([name, value]) => (\n         <div>{value}% {name}</div>\n        ))}\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>HOLIDAY</Heading>\n        {params.benefits.holiday}\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>EQUITY</Heading>\n        {params.benefits.equity}\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>PRIVATE HEALTH CARE</Heading>\n        {params.benefits.healthcare}\n      </Box>\n      <Box pad='small'>\n        <Heading size='18px' margin='none' color={LightGrey}>OTHER BENEFITS</Heading>\n        {params.benefits.other.map(text => (\n          <div>\n            {text}\n          </div>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default BenefitsTab;\n","import React from 'react'\nimport { Box, Image, Stack, Avatar } from 'grommet'\nimport { White } from '../global/colors'\n\nfunction CompanyTab(params) {\n  return (\n    <Box fill background='#FFFFFF' gridArea='main' pad='small'>\n      <Stack anchor=\"bottom-left\">\n        <Box height='medium'>\n          <Image\n            fit='cover'\n            src={params.company.cover_picture}\n            margin='medium'\n          />\n        </Box>\n        <Stack anchor=\"center\">\n          <Avatar background={White} size='xlarge' style={{ border: '1px solid #fff' }} />\n          <Avatar src={params.company.profile_picture} size='large' style={{ border: '2px solid #fff' }} />\n        </Stack>\n      </Stack>\n      <h3>{params.company.elevatorPitch}</h3>\n      <p>\n        {params.company.info}\n      </p>\n    </Box>\n  );\n}\n\nexport default CompanyTab;\n","import { Turquoise, Charchoal, Purple, White } from './colors';\nimport { grommet } from \"grommet/themes\";\n\nexport const SBOJTheme = {\n  \"global\": {\n    \"colors\": {\n      brand: Turquoise,\n      \"accent-1\": Purple,\n      text: {\n        light: Charchoal\n      }\n    },\n    font: {\n      family: 'Source Sans Pro',\n    }\n  },\n  button: {\n    color: White,\n  }\n};\n\nexport const CustomizeTheme = (customTheme) => {\n  console.log({ ...SBOJTheme, ...customTheme })\n  return { ...grommet, ...SBOJTheme, ...customTheme }\n}","export const names = [\n    'Jadon Kaufman',\n    'Ellesse Bravo',\n    'Claudia Sheldon',\n    'Kelsi Huffman',\n    'Jamelia Arroyo',\n    'Armaan Barr',\n    'Arielle Zavala',\n    'Ronny Talley',\n    'Federico Hooper',\n    'Beverly O\\'Reilly'\n  ]\n  \n  export const pictures = [\n    'https://cdn.fastly.picmonkey.com/contentful/h6goo9gw1hh6/2sNZtFAWOdP1lmQ33VwRN3/24e953b920a9cd0ff2e1d587742a2472/1-intro-photo-final.jpg?w=800&q=70',\n    'https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-4.png',\n    'https://www.suelaceyphotography.com/v/p/QDTKd4AO9ofE9HwbZ5v5anz7-business-profile-shots-img-0241-1582334654.jpg',\n    'https://i.insider.com/5899ffcf6e09a897008b5c04?width=600&format=jpeg&auto=webp',\n    'https://sites.psu.edu/iabcpennstate/wp-content/uploads/sites/18140/2015/01/professional-woman-4.jpg',\n    'https://cathleo.com.au/wp-content/uploads/2016/03/Profiles-UnisA-5.jpg',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsBvTHtysWxzGWd0e3yTig65uzlDf1ZsBUKoDhB-w7nkyVyOV9&usqp=CAU',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSwNvj0HEnOYsY5Ny0qcuf1BDJXOEQnMEqHsHQC4ocbMR6FSwpP&usqp=CAU',\n    'https://ocbj.media.clients.ellingtoncms.com/img/photos/2011/06/03/SR_Profile_Ken_Sullivan_6-6_t670.jpg?b3f6a5d7692ccc373d56e40cf708e3fa67d9af9d',\n    'https://www.joscottimages.co.uk/_webedit/cached-images/263-0-0-893-10000-7451-612.jpg'\n  ]","import React from \"react\"\n\nimport { Grid, ResponsiveContext } from \"grommet\"\n\n\nconst Responsive = ({\n  children,\n  overrideColumns,\n  overrideRows,\n  areas,\n  ...props\n}) => (\n  <ResponsiveContext.Consumer>\n    {size => {\n      // Take into consideration if not array is sent but a simple string\n      let columnsVal = props.columns;\n      if (props.columns) {\n        if (props.columns[size]) {\n          columnsVal = props.columns[size];\n        }\n      }\n\n      let rowsVal = props.rows;\n      if (props.rows) {\n        if (props.rows[size]) {\n          rowsVal = props.rows[size];\n        }\n      }\n\n      // Also if areas is a simple array not an object of arrays for\n      // different sizes\n      let areasVal = areas;\n      if (areas && !Array.isArray(areas)) areasVal = areas[size];\n\n      return (\n        <Grid\n          {...props}\n          areas={!areasVal ? undefined : areasVal}\n          rows={!rowsVal ? size : rowsVal}\n          columns={!columnsVal ? size : columnsVal}\n        >\n          {children}\n        </Grid>\n      );\n    }}\n  </ResponsiveContext.Consumer>\n);\n\n\nexport default Responsive","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Grid, Tabs, Tab, Button, Grommet } from 'grommet'\n\nimport JobViewRecruiterSubSection from './job/JobViewRecruiterSubSection'\nimport JobViewExtraInfoSubSection from './job/JobViewExtraInfoSubSection'\nimport JobViewSocialSubSection from './job/JobViewSocialSubSection'\nimport JobTab from './job/JobTab'\nimport BenefitsTab from './job/BenefitsTab'\nimport CompanyTab from './job/CompanyTab'\nimport { css } from 'styled-components'\n\nimport { LightGrey } from './global/colors'\nimport { CustomizeTheme } from './global/styles'\nimport { names, pictures } from './global/mock'\n\nimport Responsive from './Responsive'\n\n// If the size is small, we only see 1 column\n// If the size is medium, we only see 2 columns\n// If the size is either large or xlarge, we see 3 columns\nconst columns = {\n  small: [\"fill\"],\n  medium: [{ min: 'fill', max: '800px' }, { min: '350px', max: '350px' }],\n  large: [\"800px\", \"350px\"],\n  xlarge: [\"800px\", \"350px\"],\n  xxlarge: [\"800px\", \"350px\"]\n};\n\n// If the size is small, we have 3 rows\n// If the size is medium, we have 2 rows\n// If the size is large or xlarge, we have 1 row\nconst rows = {\n  small: [\"auto\", \"auto\"],\n  medium: [\"auto\", \"auto\"],\n  large: [\"auto\"],\n  xlarge: [\"auto\"]\n};\n\n// Set the different areas you need for every size\nconst fixedGridAreas = {\n  small: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [0, 1], end: [0, 1] }\n  ],\n  medium: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [0, 1], end: [0, 1] }\n  ],\n  large: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [1, 0], end: [1, 0] }\n  ],\n  xlarge: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [0, 1], end: [0, 1] }\n  ]\n};\n\nfunction Job(params) {\n  let { id } = useParams();\n  fetch('https://qi827wd4q4.execute-api.eu-west-1.amazonaws.com/api/sboj-job-function')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n\n  const [index, setIndex] = React.useState();\n\n  const theme = {\n    tab: {\n      active: {\n        color: 'dark-1'\n      },\n      color: 'accent-1',\n      border: {\n        color: 'accent-1'\n      },\n      size: '250px',\n      extend: ({ theme }) => css`\n      font-weight: bold;\n      width: 200px;\n    `\n    },\n    tabs: {\n      gap: 'medium',\n    }\n  }\n\n  const onActive = nextIndex => setIndex(nextIndex);\n\n  const randomName = names[Math.floor(Math.random() * names.length)];\n  const randomPicture = pictures[Math.floor(Math.random() * pictures.length)];\n  if (!params.job) {\n    params = {}\n    params.job = {\n      company: {\n        name: 'London Tech',\n        website: 'http://www.LonTec.com',\n        location: 'London, UK',\n        techStack: [\n          'Python',\n          'Java',\n          'Django'\n        ],\n        elevatorPitch: 'At London Tech, we solve the most complex problems with the most updated solutions.',\n        info: 'Since 2010, London Tech, has been consulting with some of the most well known and forward thinking companies in the world. We have built a reputation for delivering complex solution in the simplest and most effective ways to make to that any technical problem is completely solved.',\n        size: '+100',\n        founded: '2010',\n        profile_picture: 'https://i.imgur.com/rK5Jkkc.jpg',\n        cover_picture: 'https://i.imgur.com/pazVpu2.jpg',\n        socialMedia: {\n          linkedin: 'https://www.linkedin.com/company/sboj-io/',\n          twitter: 'https://twitter.com/CrosstownDough',\n          instagram: 'https://www.instagram.com/crosstowndoughnuts'\n        }\n      },\n      recruiter: {\n        name: randomName,\n        title: 'Head of Recruiting',\n        organization: 'Sboj.io',\n        rating: getRandomInt(1, 5),\n        profile_picture: randomPicture\n      },\n      benefits: {\n        salary: {\n          currency: 'GBP',\n          min: '40,000',\n          max: '50,000'\n        },\n        remoteWorking: 'Yes',\n        bonus: '5,000',\n        bonusStructure: {\n          'Company performance': 50,\n          'Personal performance': 50\n        },\n        holiday: 28,\n        equity: 'No',\n        healthcare: 'Vitality - Full Memebership',\n        other: [\n          'Health Care (Private)',\n          'Free Fruit and Coffee',\n          'Travel loan',\n          'Quarterly company parties',\n          'Gym Membership',\n        ]\n      },\n      position: 'Inhouse SAP ABAP Developer',\n      description: 'A global end user in the Consulting industry is seeking a talented and professional ABAP developer for their HQ in the Cologne Area.',\n      responsibilities: [\n        'Software development in the SAP ERP environment with the aid of all available development environments',\n        'Customisation of the functional SAP modules FI/CO',\n        'Interface programming and form design with SAP Script / Smartforms',\n        'Ensuring stability and availability of the SAP environment including the interfaces through standardised change and test management',\n        'Provide 1st and 2nd level support'\n      ],\n      experiences: [\n        '2-5 Years Cross-Module customisation Ideally with in FI/CO',\n        'Excellent understanding of ABAP and ABAP OO as well as project management knowledge',\n        'Able to work independently ',\n        'A hunger to grow and learn newer technologies',\n        'Conversational German and Fluent English'\n\n      ],\n      employment: 'Permanent',\n      businessTravel: '0'\n    }\n  }\n\n  const [buttonApplied, setButtonApplied] = React.useState(false);\n\n  return (\n    <div>\n\n      <Box direction='row' height='auto'>\n        <Box fill size='large'>\n          <div>\n            <h1>{params.job.position}</h1>\n            <h2 style={{ color: LightGrey, marginBottom: 0 }}>{params.job.company.name}</h2>\n          </div>\n        </Box>\n        {!params.hideApplyButton &&\n          <Box align='center'>\n            {!buttonApplied &&\n              <Button primary size='large' label='Apply' onClick={() => { setButtonApplied(true) }} />\n            }\n            {buttonApplied &&\n              <Button primary size='large' label='Applied' onClick={() => { }} />\n            }\n          </Box>\n        }\n      </Box>\n\n      <Responsive\n        rows={rows}\n        columns={columns}\n        gap=\"small\"\n        areas={fixedGridAreas}\n      >\n        <Box\n          gridArea=\"header\"\n        >\n          <Grommet theme={CustomizeTheme(theme)}>\n            <Tabs activeIndex={index} onActive={onActive} justify='left'>\n              <Tab title='The Job'>\n                <JobTab\n                  description={params.job.description}\n                  responsibilities={params.job.responsibilities}\n                  experiences={params.job.experiences}\n                  businessTravel={params.job.businessTravel}\n                />\n              </Tab>\n              <Tab title='The Benefits'>\n                <BenefitsTab\n                  benefits={params.job.benefits}\n                />\n              </Tab>\n              <Tab title='The Company'>\n                <CompanyTab\n                  company={params.job.company}\n                />\n              </Tab>\n            </Tabs>\n          </Grommet>\n        </Box>\n        <Box\n          gridArea=\"test\"\n        >\n          <JobViewRecruiterSubSection\n            recruiter={params.job.recruiter}\n          />\n\n          <JobViewExtraInfoSubSection\n            website={params.job.company.website}\n            techStack={params.job.company.techStack}\n            location={params.job.company.location}\n          />\n\n          <JobViewSocialSubSection social={params.job.company.socialMedia} />\n        </Box>\n      </Responsive>\n\n\n      {/* // rows={['auto', 'flex']}\n        // columns={[['auto', '800px'], ['350px', '350px']]} */}\n      {/* areas={[\n          { name: 'header', start: [0, 0], end: [1, 0] },\n          { name: 'main', start: [0, 1], end: [0, 1] },\n          { name: 'side', start: [1, 1], end: [1, 1] }\n        ]} */}\n    </div>\n  );\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default Job;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, List, Text, Avatar } from 'grommet'\n\n\nexport const data = [\n  { name: 'Awesome job one', to: '/job/abc', profile_picture: 'https://sboj.io/static/icons/apple-icon-152x152.png' },\n  { name: 'Awesome job two', to: '/job/cde', profile_picture: 'https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/0008/9493/brand.gif?itok=690RQQCd' },\n  { name: 'Awesome job three', to: '/job/xyz', profile_picture: 'https://lh3.googleusercontent.com/proxy/AoCp1qwP0kcqdtZDLob4-Wqg9SyWxsEiPsc2YHBOoJUw1TxMJZgR3HaNVwujbDi-lsWF9wQu2J1naLQQ3GoQO6TMdvPf8saMukMb' }\n];\n\nfunction Home() {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n        <h1>Jobs</h1>\n        <List data={data} pad='medium'>\n          {(datum, index) => (\n            <Box\n              key={index}\n              direction='row-responsive'\n              gap='large'\n              size='xsmall'\n              align='center'\n            >\n              <Link to={datum.to}>\n                <Box direction='row' gap='small' justify='center'>\n                  <Avatar src={datum.profile_picture} size='large' />\n                  <Text weight='bold'>{datum.name}</Text>\n                </Box>\n              </Link>\n            </Box>\n          )}\n        </List>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n","import React from 'react'\nimport { Purple, White } from '../colors'\nimport { Box } from 'grommet'\nimport { FormClose } from 'grommet-icons'\n\nfunction DeletableTechTag(params) {\n  return (\n    <div style={{\n      backgroundColor: Purple,\n      border: 'none',\n      color: White,\n      margin: 4,\n      padding: '4px 8px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-block',\n      borderRadius: '16px',\n      fontSize: '12px'\n    }}>\n      <Box direction='row'>\n        {params.label} <FormClose pad={{left: 'large'}} color={White} onClick={params.onClick}/>\n      </Box>\n    </div>\n  );\n}\n\nexport default DeletableTechTag","import React from 'react'\nimport { Box, TextInput, Button } from 'grommet'\nimport { AddCircle } from 'grommet-icons'\n\nfunction ListInput(params) {\n  return (\n    <div>\n        <Box\n          width=\"medium\"\n          direction=\"row\"\n          align=\"center\"\n          round=\"xsmall\"\n          border\n        >\n          <TextInput\n            plain\n            value={params.value}\n            onChange={params.onChange}\n            onKeyPress={params.onKeyPress}\n            placeholder={params.placeholder}\n          />\n          <Button\n            icon={<AddCircle size=\"medium\" />}\n            onClick={params.iconOnClick}\n          />\n      </Box>\n    </div >\n  );\n}\n\nexport default ListInput","import React, { useState } from 'react'\nimport { Box, TextInput, RadioButton } from 'grommet'\nimport TechTag from './global/tags/TechTag'\nimport DeletableTechTag from './global/tags/DeletableTechTag'\nimport ListInput from './ListInput'\n\nfunction PostBasicInfo(params) {\n  const [techStackInput, setTechStackInput] = useState('');\n  const onChangeTechStackInput = function (event) {\n    if (event.key === 'Enter') {\n      let techStack = [...params.techStack]\n      techStack.push(techStackInput)\n      params.setTechStack(techStack)\n      setTechStackInput('')\n    }\n  }\n\n  const onClickTechStackInput = () => {\n    let techStack = [...params.techStack]\n    techStack.push(techStackInput)\n    params.setTechStack(techStack)\n    setTechStackInput('')\n  }\n\n  const onDeleteTechStack = function (index) {\n    return function (event) {\n      let techStack = [...params.techStack]\n      techStack.splice(index, 1);\n      params.setTechStack(techStack)\n    }\n  }\n\n  return (\n    <div>\n      <h3>Job Title</h3>\n      <Box width='medium'>\n        <TextInput value={params.position} onChange={event => params.setPosition(event.target.value)} placeholder='Java developer' />\n      </Box>\n      <h3>Tech Stack</h3>\n      <Box width='medium'>\n        <ListInput\n          value={techStackInput}\n          onChange={event => setTechStackInput(event.target.value)}\n          onKeyPress={onChangeTechStackInput}\n          placeholder='Type a technology'\n          iconOnClick={onClickTechStackInput}\n        />\n      </Box>\n      <div hidden>\n        Smart suggestions based on other positions like yours<br />\n        <TechTag label='Java' /><TechTag label='Spring Framework' /><TechTag label='Postgres' /><br />\n      </div>\n      {params.techStack && params.techStack.map((text, i) => (\n        <DeletableTechTag\n          label={text}\n          onClick={onDeleteTechStack(i)}\n        />\n      ))}\n      <h3>Location</h3>\n      <Box width='medium'>\n        <TextInput value={params.location} onChange={event => params.setLocation(event.target.value)} placeholder='Java developer' />\n      </Box>\n      <h3>Employment Type</h3>\n      <Box align='center' direction='row'>\n        <Box margin='small'>\n          <RadioButton\n            label='Permanent'\n            name='employmentType'\n            value='permanent'\n            checked={params.employmentType === 'permanent'}\n            onChange={event => params.setEmploymentType(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Freelance'\n            name='employmentType'\n            value='freelance'\n            checked={params.employmentType === 'freelance'}\n            onChange={event => params.setEmploymentType(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Part-time'\n            name='employmentType'\n            value='parttime'\n            checked={params.employmentType === 'parttime'}\n            onChange={event => params.setEmploymentType(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Internship'\n            name='employmentType'\n            value='internship'\n            checked={params.employmentType === 'internship'}\n            onChange={event => params.setEmploymentType(event.target.value)}\n          />\n        </Box>\n      </Box>\n\n      <h3>Remote Working</h3>\n      <Box align='center' direction='row'>\n        <Box margin='small'>\n          <RadioButton\n            label='Fully'\n            name='remote'\n            value='fully'\n            checked={params.remoteWorking === 'fully'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Mostly'\n            name='remote'\n            value='mostly'\n            checked={params.remoteWorking === 'mostly'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Once a week'\n            name='remote'\n            value='once'\n            checked={params.remoteWorking === 'once'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='When needed'\n            name='remote'\n            value='when'\n            checked={params.remoteWorking === 'when'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='Very rarely'\n            name='remote'\n            value='rarely'\n            checked={params.remoteWorking === 'rarely'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='None'\n            name='remote'\n            value='none'\n            checked={params.remoteWorking === 'none'}\n            onChange={event => params.setRemoteWorking(event.target.value)}\n          />\n        </Box>\n      </Box>\n\n      <h3>Business Travel</h3>\n      <Box align='center' direction='row'>\n        <Box margin='small'>\n          <RadioButton\n            label='100%'\n            name='businessTravel'\n            value='100'\n            checked={params.businessTravel === '100'}\n            onChange={event => params.setBusinessTravel(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='75%'\n            name='businessTravel'\n            value='75'\n            checked={params.businessTravel === '75'}\n            onChange={event => params.setBusinessTravel(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='50%'\n            name='businessTravel'\n            value='50'\n            checked={params.businessTravel === '50'}\n            onChange={event => params.setBusinessTravel(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='25%'\n            name='businessTravel'\n            value='25'\n            checked={params.businessTravel === '25'}\n            onChange={event => params.setBusinessTravel(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='None'\n            name='businessTravel'\n            value='0'\n            checked={params.businessTravel === '0'}\n            onChange={event => params.setBusinessTravel(event.target.value)}\n          />\n        </Box>\n      </Box>\n\n    </div >\n  );\n}\n\nexport default PostBasicInfo;","import React, { useState } from 'react'\nimport { Box, TextInput, Select, MaskedInput, RadioButton, RangeInput } from 'grommet'\nimport { FormClose } from 'grommet-icons'\nimport { LightGrey, Purple, White } from './global/colors'\nimport ListInput from './ListInput'\n\nfunction PostSalaryBenefits(params) {\n\n  const [otherBenefitsInput, setOtherBenefitsInput] = useState('');\n  const onKeyPressOtherBenefitsInput = function (event) {\n    if (event.key === 'Enter') {\n      let otherBenefits = [...params.otherBenefits]\n      otherBenefits.push(otherBenefitsInput)\n      params.setOtherBenefits(otherBenefits)\n      setOtherBenefitsInput('')\n    }\n  }\n  const onSelectOtherBenefitsInput = function (event) {\n    let otherBenefits = [...params.otherBenefits]\n    otherBenefits.push(event.suggestion)\n    params.setOtherBenefits(otherBenefits)\n    setOtherBenefitsInput('')\n  }\n\n  const [bonusInput, setBonusInput] = useState('');\n  const onKeyPressBonusInput = function (event) {\n    if (event.key === 'Enter') {\n      let bonus = { ...params.bonusStructure }\n      bonus[event.target.value] = 50\n      params.setBonusStructure(bonus)\n      setBonusInput('')\n    }\n  }\n\n  const onClickBonusInput = () => {\n    let bonus = { ...params.bonusStructure }\n    bonus[bonusInput] = 50\n    params.setBonusStructure(bonus)\n    setBonusInput('')\n  }\n\n  const onChangeBonusStructureSlider = (key) => {\n    return (event) => {\n      let bonus = { ...params.bonusStructure }\n      bonus[key] = event.target.value\n      params.setBonusStructure(bonus)\n    }\n  }\n\n  const deleteBonusStructure = (key) => {\n    return (event) => {\n      let bonus = { ...params.bonusStructure }\n      delete bonus[key]\n      params.setBonusStructure(bonus)\n    }\n  }\n\n  return (\n    <div>\n      <h3>Salary</h3>\n      <Box width='small'>\n        <div style={{ fontWeight: 'bold', color: LightGrey, margin: 8 }}>\n          Currency\n        </div>\n        <Select\n          options={['GBP', 'EUR', 'USD']}\n          value={params.currency}\n          onChange={({ option }) => params.setCurrency(option)}\n        />\n      </Box>\n      <Box direction='column'>\n        <Box align='center' direction='row'>\n          <Box width='small'>\n            <div style={{ fontWeight: 'bold', color: LightGrey, margin: 8 }}>\n              From\n            </div>\n          </Box>\n          <div style={{ width: 20, margin: 10 }} />\n          <Box width='small'>\n            <div style={{ fontWeight: 'bold', color: LightGrey, margin: 8 }}>\n              To\n            </div>\n          </Box>\n        </Box>\n        <Box align='center' direction='row'>\n          <Box width='small'>\n            <MaskedInput\n              mask={[\n                {\n                  regexp: /^[0-9]{1,7}$/,\n                  placeholder: \"50000\"\n                },\n              ]}\n              value={params.minSalary}\n              onChange={event => params.setMinSalary(event.target.value)}\n            />\n          </Box>\n          <div style={{ width: 20, border: 'solid 1px ' + LightGrey, margin: 10 }} />\n          <Box width='small'>\n            <MaskedInput\n              mask={[\n                {\n                  regexp: /^[0-9]{1,7}$/,\n                  placeholder: \"60000\"\n                },\n              ]}\n              value={params.maxSalary}\n              onChange={event => params.setMaxSalary(event.target.value)}\n            />\n          </Box>\n        </Box>\n      </Box>\n\n      <h3>Bonus</h3>\n\n      <Box width='small'>\n        <TextInput\n          value={params.bonus}\n          onChange={event => params.setBonus(event.target.value)}\n          placeholder='' />\n      </Box>\n\n      <Box width='medium'>\n        <div style={{ fontWeight: 'bold', color: LightGrey, margin: 8 }}>\n          How is it achieved?\n        </div>\n        <ListInput\n          value={bonusInput}\n          onChange={event => setBonusInput(event.target.value)}\n          onKeyPress={onKeyPressBonusInput}\n          placeholder='Personal Performance, Stocks...'\n          iconOnClick={onClickBonusInput}\n        />\n      </Box>\n      {\n        params.bonusStructure && Object.entries(params.bonusStructure).map(([text, value]) => (\n          <Box direction='row' margin='small'>\n            <div\n              style={{\n                width: 150,\n                textAlign: 'center',\n                backgroundColor: Purple,\n                color: White,\n              }}>\n              {text}\n            </div>\n            <FormClose pad={{ left: 'large' }} style={{ cursor: 'pointer' }} color='red' onClick={deleteBonusStructure(text)} />\n            <Box size='small' margin={{ left: 'small', right: 'small' }}>\n              <RangeInput\n                value={value}\n                onChange={onChangeBonusStructureSlider(text)}\n              />\n            </Box>\n            <div>{value}%</div>\n          </Box>\n        ))\n      }\n\n      <h3>Equity</h3>\n      <Box align='center' direction='row'>\n        <Box margin='small'>\n          <RadioButton\n            label='Yes'\n            name='equity'\n            value='true'\n            checked={params.equity === 'true'}\n            onChange={event => params.setEquity(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label='No'\n            name='equity'\n            value='false'\n            checked={params.equity === 'false'}\n            onChange={event => params.setEquity(event.target.value)}\n          />\n        </Box>\n      </Box>\n\n      <h3>Holiday</h3>\n      <Box direction='row' align='center'>\n        <Box width='xxsmall'>\n          <MaskedInput\n            mask={[\n              {\n                regexp: /^[0-9]{1,2}$/,\n                placeholder: \"28\"\n              },\n            ]}\n            value={params.holiday}\n            onChange={event => params.setHoliday(event.target.value)}\n          />\n        </Box>\n        <Box margin={{ left: '8px' }}>\n          Days\n        </Box>\n      </Box>\n\n      <h3>Healthcare</h3>\n      <Box width='medium'>\n        <Select\n          options={['None', 'Vitality - Basic Membership', 'Vitality - Premium Membership', 'BUPA Cover', 'Other']}\n          value={params.healthcare}\n          onChange={({ option }) => params.setHealthcare(option)}\n          placeholder='Currency'\n        />\n      </Box>\n\n      <h3>Other Benefits</h3>\n      <Box width='medium'>\n        <TextInput\n          value={otherBenefitsInput}\n          onChange={event => setOtherBenefitsInput(event.target.value)}\n          onSelect={onSelectOtherBenefitsInput}\n          onKeyPress={onKeyPressOtherBenefitsInput}\n          suggestions={otherBenefitSuggestions}\n          dropProps={{ height: \"small\" }}\n          placeholder='Personal Performance, Stocks...' />\n      </Box>\n      {\n        params.otherBenefits && params.otherBenefits.map(text => (\n          <p>{text}</p>\n        ))\n      }\n    </div >\n  );\n}\n\nexport default PostSalaryBenefits;\n\nconst otherBenefitSuggestions = [\n  'Free Fruit',\n  'Free Coffee drinks',\n  'Discounted meals',\n  'Dental care plans',\n  'Free travel',\n  'Subsided travel',\n  'Travel Loan',\n  'Free company events',\n  'Childcare vouchers',\n  'Flexible working hours',\n  'Gym Membership',\n  'Yearly Company Holiday',\n  'Xmas Food hamper',\n  'Cycle Scheme',\n  'Shopping Vouchers',\n  'Personal Loans',\n  'Course Allowance',\n  'Car Allowance'\n]","import React from 'react'\nimport { Box, TextInput, TextArea } from 'grommet'\n\nfunction PostJobDescription(params) {\n  const setDescription = function(event) {\n    if (event.target.value.length <= 500) {\n      params.setDescription(event.target.value)\n    }\n  }\n  return (\n    <div>\n      <h3>Description</h3>\n      <Box width='xlarge'>\n        <Box margin='small'>\n          <TextArea\n            placeholder='Describe a little about the project your company/client is going through. Be concise. You only have 80 words!'\n            value={params.description}\n            onChange={setDescription}\n            resize={false}\n          />\n        </Box>\n        {params.description.length} / 500\n      </Box>\n      <h3>Job Responsibilities</h3>\n      You can have up to five\n      <Box width='xlarge'>\n        <Box margin='small'>\n          <TextInput value={params.responsibility1} onChange={event => params.setResponsibility1(event.target.value)} placeholder='Type job responsibility here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.responsibility2} onChange={event => params.setResponsibility2(event.target.value)} placeholder='Type job responsibility here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.responsibility3} onChange={event => params.setResponsibility3(event.target.value)} placeholder='Type job responsibility here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.responsibility4} onChange={event => params.setResponsibility4(event.target.value)} placeholder='Type job responsibility here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.responsibility5} onChange={event => params.setResponsibility5(event.target.value)} placeholder='Type job responsibility here' />\n        </Box>\n      </Box>\n      <h3>Required Experience</h3>\n      You can have up to five\n      <Box width='xlarge'>\n        <Box margin='small'>\n          <TextInput value={params.experience1} onChange={event => params.setExperience1(event.target.value)} placeholder='Type previous experience here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.experience2} onChange={event => params.setExperience2(event.target.value)} placeholder='Type previous experience here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.experience3} onChange={event => params.setExperience3(event.target.value)} placeholder='Type previous experience here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.experience4} onChange={event => params.setExperience4(event.target.value)} placeholder='Type previous experience here' />\n        </Box>\n        <Box margin='small'>\n          <TextInput value={params.experience5} onChange={event => params.setExperience5(event.target.value)} placeholder='Type previous experience here' />\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default PostJobDescription;","import React from 'react'\nimport { Grommet, Button } from 'grommet'\nimport { CustomizeTheme } from '../styles'\nimport { FormPreviousLink } from 'grommet-icons'\n\nfunction BackButton(params) {\n  return (\n    <Grommet theme={CustomizeTheme({\n      button: {\n        color: 'brand'\n      }\n    })}>\n      <Button label='Back' icon={<FormPreviousLink color='brand' />} onClick={params.onClick} />\n    </Grommet>\n  );\n}\n\nexport default BackButton","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PostBasicInfo from './PostBasicInfo'\nimport PostSalaryBenefits from './PostSalaryBenefits'\nimport PostJobDescription from './PostJobDescription'\nimport { Box, Tabs, Tab, Button, Grommet, Layer, Image } from 'grommet'\nimport { CustomizeTheme } from './global/styles'\nimport { Purple } from './global/colors'\nimport { css } from 'styled-components'\nimport { FormNextLink, StatusGood, Send } from 'grommet-icons'\nimport BackButton from './global/buttons/BackButton'\nimport { White } from './global/colors'\nimport Job from './Job'\n\nfunction isEmpty(str) {\n  return (!str || 0 === str.length);\n}\n\nfunction Post({ checked: checkedProp, ...rest }) {\n\n  const [index, setIndex] = React.useState();\n  const onActive = nextIndex => setIndex(nextIndex);\n\n  const theme = {\n    tab: {\n      active: {\n        color: 'dark-1'\n      },\n      color: 'accent-1',\n      border: {\n        color: 'accent-1'\n      },\n      size: '250px',\n      extend: ({ theme }) => css`\n      font-weight: bold;\n    `\n    },\n    tabs: {\n      gap: 'medium',\n    }\n  }\n\n  const [position, setPosition] = useState('')\n  const [techStack, setTrackStack] = useState([])\n  const [location, setLocation] = useState('')\n  const [employmentType, setEmploymentType] = useState()\n  const [holiday, setHoliday] = useState()\n  const [remoteWorking, setRemoteWorking] = useState()\n  const [businessTravel, setBusinessTravel] = useState()\n\n  const isBasicInfoComplete = function () {\n    return !isEmpty(position) && !isEmpty(techStack) && !isEmpty(location)  && !isEmpty(employmentType) && !isEmpty(remoteWorking) && !isEmpty(businessTravel)\n  }\n\n  const [currency, setCurrency] = useState('')\n  const [minSalary, setMinSalary] = useState('')\n  const [maxSalary, setMaxSalary] = useState('')\n  const [bonus, setBonus] = useState('')\n  const [bonusStructure, setBonusStructure] = useState({})\n  const [equity, setEquity] = useState()\n  const [healthcare, setHealthcare] = useState('None')\n  const [otherBenefits, setOtherBenefits] = useState([])\n\n  const isSalaryBenefitsComplete = function () {\n    return !isEmpty(currency) && !isEmpty(minSalary) && !isEmpty(maxSalary) && !isEmpty(holiday) && !isEmpty(healthcare)\n  }\n\n  const [description, setDescription] = useState('')\n\n  const [responsibility1, setResponsibility1] = useState('')\n  const [responsibility2, setResponsibility2] = useState('')\n  const [responsibility3, setResponsibility3] = useState('')\n  const [responsibility4, setResponsibility4] = useState('')\n  const [responsibility5, setResponsibility5] = useState('')\n\n  const [experience1, setExperience1] = useState('')\n  const [experience2, setExperience2] = useState('')\n  const [experience3, setExperience3] = useState('')\n  const [experience4, setExperience4] = useState('')\n  const [experience5, setExperience5] = useState('')\n\n  const isJobDescriptionComplete = function () {\n    return !isEmpty(description) &&\n      (!isEmpty(responsibility1) || !isEmpty(responsibility2) || !isEmpty(responsibility3) || !isEmpty(responsibility4) || !isEmpty(responsibility5)) &&\n      (!isEmpty(experience1) || !isEmpty(experience2) || !isEmpty(experience3) || !isEmpty(experience4) || !isEmpty(experience5))\n  }\n\n  let job = {\n    company: {\n      name: 'London Tech',\n      website: 'http://www.LonTec.com',\n      location: location,\n      techStack: techStack,\n      elevatorPitch: 'At London Tech, we solve the most complex problems with the most updated solutions.',\n      info: 'Since 2010, London Tech, has been consulting with some of the most well known and forward thinking companies in the world. We have built a reputation for delivering complex solution in the simplest and most effective ways to make to that any technical problem is completely solved.',\n      size: '+100',\n      founded: '2010',\n      profile_picture: 'https://i.imgur.com/rK5Jkkc.jpg',\n      cover_picture: 'https://i.imgur.com/pazVpu2.jpg',\n      socialMedia: {\n        linkedin: 'https://www.linkedin.com/company/sboj-io/',\n        twitter: 'https://twitter.com/CrosstownDough',\n        instagram: 'https://www.instagram.com/crosstowndoughnuts'\n      }\n    },\n    recruiter: {\n      name: \"You\",\n      title: 'Head of Recruiting',\n      organization: 'Sboj.io',\n      rating: 5,\n      profile_picture: ''\n    },\n    benefits: {\n      salary: {\n        currency: currency,\n        min: minSalary,\n        max: maxSalary\n      },\n      remoteWorking: remoteWorking,\n      bonus: bonus,\n      bonusStructure: bonusStructure,\n      equity: equity,\n      holiday: holiday,\n      healthcare: healthcare,\n      other: otherBenefits\n    },\n    position: position,\n    description: description,\n    responsibilities: [\n      responsibility1,\n      responsibility2,\n      responsibility3,\n      responsibility4,\n      responsibility5\n    ],\n    experiences: [\n      experience1,\n      experience2,\n      experience3,\n      experience4,\n      experience5\n\n    ],\n    employment: employmentType,\n    businessTravel: businessTravel,\n  }\n\n  const [buttonPublished, setButtonPublished] = useState(false)\n\n  return (\n    <Grommet theme={CustomizeTheme(theme)}>\n      {buttonPublished && <Layer\n        onEsc={() => setButtonPublished(false)}\n        onClickOutside={() => setButtonPublished(false)}\n      >\n        <Box pad='large' width='medium' align='center'>\n          <Image\n            fill\n            fit='cover'\n            src={process.env.PUBLIC_URL + '/rocketman.png'}\n          />\n          <h2 style={{margin: 0}}>SUCCESS!</h2>\n          <h3>Your job has been posted.</h3>\n          <br /><br />\n        Your job should be visible to potential candidates in the next few minutes.\n        </Box>\n\n      </Layer>\n      }\n      <Tabs activeIndex={index} onActive={onActive} justify='left'>\n        <Tab title={<RichTabTitle\n          isComplete={isBasicInfoComplete()}\n          // icon={<Checkmark color='green' />}\n          label='1: Basic Info'\n        />}>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            <PostBasicInfo\n              position={position}\n              setPosition={setPosition}\n              techStack={techStack}\n              setTechStack={setTrackStack}\n              location={location}\n              setLocation={setLocation}\n              employmentType={employmentType}\n              setEmploymentType={setEmploymentType}\n              remoteWorking={remoteWorking}\n              setRemoteWorking={setRemoteWorking}\n              businessTravel={businessTravel}\n              setBusinessTravel={setBusinessTravel}\n            />\n            <Box direction='row' justify='end'>\n              <Box width='small'>\n                <Button primary label='Continue' icon={<FormNextLink color={White} />} reverse={true} onClick={() => { setIndex(1) }} />\n              </Box>\n            </Box>\n          </Box>\n        </Tab>\n        <Tab title={<RichTabTitle\n          isComplete={isSalaryBenefitsComplete()}\n          // icon={<Checkmark color='green' />}\n          label='2: Salary and benefits'\n        />}>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            <PostSalaryBenefits\n              currency={currency}\n              setCurrency={setCurrency}\n              minSalary={minSalary}\n              setMinSalary={setMinSalary}\n              maxSalary={maxSalary}\n              setMaxSalary={setMaxSalary}\n              bonus={bonus}\n              setBonus={setBonus}\n              bonusStructure={bonusStructure}\n              setBonusStructure={setBonusStructure}\n              equity={equity}\n              setEquity={setEquity}\n              holiday={holiday}\n              setHoliday={setHoliday}\n              healthcare={healthcare}\n              setHealthcare={setHealthcare}\n              otherBenefits={otherBenefits}\n              setOtherBenefits={setOtherBenefits}\n            />\n            <Box direction='row' justify='end'>\n              <Box width='small'>\n                <BackButton onClick={() => { setIndex(0) }} />\n              </Box>\n              <Box width='small'>\n                <Button primary label='Continue' icon={<FormNextLink color={White} />} reverse={true} onClick={() => { setIndex(2) }} />\n              </Box>\n            </Box>\n          </Box>\n        </Tab>\n        <Tab title={<RichTabTitle\n          isComplete={isJobDescriptionComplete()}\n          label='3: Job Description'\n        />}>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            <PostJobDescription\n              description={description}\n              setDescription={setDescription}\n\n              responsibility1={responsibility1}\n              setResponsibility1={setResponsibility1}\n              responsibility2={responsibility2}\n              setResponsibility2={setResponsibility2}\n              responsibility3={responsibility3}\n              setResponsibility3={setResponsibility3}\n              responsibility4={responsibility4}\n              setResponsibility4={setResponsibility4}\n              responsibility5={responsibility5}\n              setResponsibility5={setResponsibility5}\n\n              experience1={experience1}\n              setExperience1={setExperience1}\n              experience2={experience2}\n              setExperience2={setExperience2}\n              experience3={experience3}\n              setExperience3={setExperience3}\n              experience4={experience4}\n              setExperience4={setExperience4}\n              experience5={experience5}\n              setExperience5={setExperience5}\n            />\n            <Box direction='row' justify='end'>\n              <Box width='small'>\n                <BackButton onClick={() => { setIndex(1) }} />\n              </Box>\n              <Box width='small'>\n                <Button primary label='Continue' icon={<FormNextLink color={White} />} reverse={true} onClick={() => { setIndex(3) }} />\n              </Box>\n            </Box>\n          </Box>\n        </Tab>\n        <Tab title={<RichTabTitle\n          label='4: Publish'\n        />}>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            {(!isBasicInfoComplete() || !isSalaryBenefitsComplete() || !isJobDescriptionComplete()) && <div>\n              <h3>Hold up, cowboy!</h3>\n              <p>We are nearly there, we just need you to add a few more bits of information.</p>\n            </div>\n            }\n\n            {isBasicInfoComplete() && isSalaryBenefitsComplete() && isJobDescriptionComplete() && <div>\n              <h3>Ready to post?</h3>\n              <p>You are almost there. All that is left is to review the preview of your job posting below and then click publish.</p>\n            </div>}\n\n            <div hidden><pre>{JSON.stringify({ job }, null, 2)}</pre></div>\n            <Box direction='row' justify='end'>\n              <Box width='small'>\n                <BackButton onClick={() => { setIndex(2) }} />\n              </Box>\n              <Box width='small'>\n                <Button\n                  disabled={!(isBasicInfoComplete() && isSalaryBenefitsComplete() && isJobDescriptionComplete())}\n                  primary\n                  label='Publish'\n                  icon={<Send color={White} />}\n                  reverse={true}\n                  onClick={() => { setButtonPublished(true) }}\n                />\n              </Box>\n            </Box>\n          </Box>\n          {isBasicInfoComplete() && isSalaryBenefitsComplete() && isJobDescriptionComplete() && <Job job={job} hideApplyButton />}\n\n        </Tab>\n      </Tabs>\n\n\n    </Grommet>\n  );\n}\n\nexport default Post;\n\nconst RichTabTitle = ({ label, isComplete }) => (\n  <div>\n    {!isComplete &&\n      <Box direction='row' align='center' gap='xsmall' pad={{ right: 'large' }}>\n        <span style={{ color: Purple }}>{label}</span>\n      </Box>\n    }\n    {\n      isComplete &&\n      <Box direction='row' align='center' gap='xsmall' pad={{ right: 'large' }}>\n        <span style={{ color: Purple }}>{label}</span>\n        <StatusGood color='green' size='medium' />\n      </Box>\n    }\n  </div>\n);\n\nRichTabTitle.propTypes = {\n  label: PropTypes.string.isRequired\n};","import React from 'react';\nimport { Turquoise } from './colors'\n\nfunction Logo() {\n  return (\n    <h1 style={{\n      fontFamily: 'Righteous, cursive',\n      fontSize: 40,\n      fontWeight: 400,\n      color: '#424242',\n      userSelect: 'none'\n    }}>Sb<span style={{color: Turquoise}}>o</span>j</h1>\n  );\n}\n\nexport default Logo;\n","import React from \"react\"\n\nimport { Grommet, Box, Grid } from \"grommet\"\nimport Responsive from './Responsive'\n\n\n// If the size is small, we only see 1 column\n// If the size is medium, we only see 2 columns\n// If the size is either large or xlarge, we see 3 columns\nconst columns = {\n  small: [\"auto\"],\n  medium: [\"auto\", \"auto\"],\n  large: [\"auto\", \"auto\", \"auto\"],\n  xlarge: [\"auto\", \"auto\", \"auto\"]\n};\n\n// If the size is small, we have 3 rows\n// If the size is medium, we have 2 rows\n// If the size is large or xlarge, we have 1 row\nconst rows = {\n  small: [\"xsmall\", \"xsmall\", \"xsmall\"],\n  medium: [\"xsmall\", \"xsmall\"],\n  large: [\"xsmall\"],\n  xlarge: [\"xsmall\"]\n};\n\n// Set the different areas you need for every size\nconst fixedGridAreas = {\n  small: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [0, 1], end: [0, 1] },\n    { name: \"test1\", start: [0, 2], end: [0, 2] }\n  ],\n  medium: [\n    { name: \"header\", start: [0, 0], end: [1, 0] },\n    { name: \"test\", start: [0, 1], end: [0, 1] },\n    { name: \"test1\", start: [1, 1], end: [1, 1] }\n  ],\n  large: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [1, 0], end: [1, 0] },\n    { name: \"test1\", start: [2, 0], end: [2, 0] }\n  ],\n  xlarge: [\n    { name: \"header\", start: [0, 0], end: [0, 0] },\n    { name: \"test\", start: [1, 0], end: [1, 0] },\n    { name: \"test1\", start: [2, 0], end: [2, 0] }\n  ]\n};\n\nconst ResponsiveGrid = () => (\n  <Grommet>\n    <Box>\n      <Responsive\n        rows={rows}\n        columns={columns}\n        gap=\"small\"\n        areas={fixedGridAreas}\n        margin=\"medium\"\n      >\n        <Box\n          gridArea=\"header\"\n          background=\"neutral-2\"\n          justify=\"center\"\n          align=\"center\"\n        >\n          <strong>Box 1</strong>\n        </Box>\n        <Box\n          gridArea=\"test\"\n          background=\"neutral-3\"\n          justify=\"center\"\n          align=\"center\"\n        >\n          <strong>Box 2</strong>\n        </Box>\n        <Box\n          gridArea=\"test1\"\n          background=\"neutral-4\"\n          justify=\"center\"\n          align=\"center\"\n        >\n          <strong>Box 3</strong>\n        </Box>\n      </Responsive>\n    </Box>\n  </Grommet>\n);\n\nexport default ResponsiveGrid","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import Home from './Home'\nimport Job from './Job'\nimport Jobs from './Jobs'\nimport Post from './Post'\nimport { NavLink } from 'react-router-dom'\nimport { Grommet, Box, Grid, Header, Avatar, Anchor } from 'grommet'\nimport { grommet } from 'grommet/themes'\n\nimport { SBOJTheme } from './global/styles'\nimport Logo from './global/Logo'\nimport ResponsiveGrid from './ResponsiveGrid'\n\nfunction App() {\n  fetch('https://0jzvzdhkz4.execute-api.eu-west-1.amazonaws.com/prod/testing')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n      <Grommet full theme={{ ...grommet, ...SBOJTheme }}>\n        <Header background='white' pad=\"small\">\n          <Logo />\n          <Box direction=\"row\" gap=\"medium\">\n            <NavLink className='side_link' to='/job/abc'>\n              Jobs\n            </NavLink>\n            <NavLink className='side_link' to='/post'>\n              Post a Job\n            </NavLink>\n          </Box>\n\n        </Header>\n        <Box align='center' width='auto' pad='medium'>\n          {/* <Route exact path='/' component={Home} /> */}\n          <Route exact path='/' component={ResponsiveGrid} />\n          <Route exact path='/jobs' component={Jobs} />\n          <Route exact path='/post' component={Post} />\n          <Route exact path='/job/:id' component={Job} />\n        </Box>\n      </Grommet>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}