{"version":3,"sources":["Home.js","SubNavigationLink.js","colors.js","JobViewRecruiterSubSection.js","JobViewExtraInfoSubSection.js","JobViewSocialSubSection.js","Job.js","Jobs.js","PostSalaryBenefits.js","Post.js","Logo.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","Box","gridArea","fill","background","justify","align","pad","margin","Yoga","size","SubNavigationLink","params","style","display","paddingBottom","marginRight","borderBottom","width","color","fontWeight","text","JobViewRecruiterSubSection","direction","gap","Avatar","src","recruiter","profile_picture","name","fontSize","title","organization","Array","rating","map","Star","JobViewExtraInfoSubSection","Heading","Text","Button","primary","label","onClick","JobViewSocialSubSection","Twitter","LinkedinOption","Instagram","Job","id","useParams","fetch","then","res","json","result","console","log","Grid","rows","columns","areas","start","end","horizontal","vertical","CaretNext","data","to","List","datum","index","key","weight","PostSalaryBenefits","useState","position","setPosition","skill","setSkill","selected","setSelected","currency","setCurrency","minSalary","setMinSalary","maxSalary","setMaxSalary","bonus","setBonus","TextInput","value","onChange","event","target","placeholder","RadioButton","checked","Select","options","option","icon","FormNextLink","reverse","Post","Logo","fontFamily","userSelect","Nav","Search","href","link","className","myTheme","global","colors","brand","font","family","App","basename","process","Grommet","full","theme","grommet","exact","path","component","Jobs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e0f8dd2b.chunk.js","sourcesContent":["import React from 'react';\nimport { Box } from 'grommet';\nimport { Yoga } from 'grommet-icons';\n\nfunction Home() {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' justify='center' align='center' pad='xlarge' margin='small'>\n          <Yoga size='xlarge' />\n          </Box>\n      </Box>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Purple } from './colors.js'\n\nfunction SubNavigationLink(params) {\n  return (\n    <div style={{\n        display:'inline-block',\n        paddingBottom: 10,\n        marginRight: 20,\n        borderBottom: '1px solid #9060EA',\n        width: 150,\n        color: Purple,\n        fontWeight: 'bold'\n    }}>{params.text}</div>\n  );\n}\n\nexport default SubNavigationLink;\n","export const LightGrey = '#BDBDBD'\nexport const Grey = '#7D7D7D'\nexport const Teal = '#08CAA1'\nexport const Purple = '#956EDC'\nexport const Lilac = '#B291F2'\n\nexport const TwitterBlue = '#03A9F3'\nexport const LinkedinBlue = '#006699'\nexport const InstagramRed = '#FF0700'","import React from 'react';\nimport { Box, Avatar } from 'grommet';\nimport { Star } from \"grommet-icons\";\nimport { Grey } from './colors.js';\n\nfunction JobViewRecruiterSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Box direction=\"row\" gap=\"small\">\n                <Avatar src={params.recruiter.profile_picture} size='large' />\n                <div>\n                    <div>{params.recruiter.name}</div>\n                    <div style={{\n                        fontWeight: 'bold',\n                        fontSize: 14,\n                        color: Grey,\n                    }}>{params.recruiter.title} @ {params.recruiter.organization}</div>\n                    <div>\n                        {[...Array(params.recruiter.rating)].map(name => (\n                            <Star color={Grey} size='small' />\n                        ))}\n                    </div>\n                </div>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewRecruiterSubSection;\n","import React from 'react';\nimport { Box, Button, Heading, Text } from 'grommet';\nimport { LightGrey, Purple } from './colors.js';\n\nfunction JobViewExtraInfoSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='small' margin=\"none\" color={LightGrey}>WEBSITE</Heading>\n            <Text>www.sboj.io</Text>\n            <Heading size='small' margin='none' color={LightGrey}>TECH STACK</Heading>\n            <Box align=\"center\" pad=\"medium\">\n              <Button  primary label=\"Javascript\" color={Purple} onClick={() => { }} />\n              <Button primary label=\"Python\" color={Purple} onClick={() => { }} />\n              <Button primary label=\"React\" color={Purple} onClick={() => { }} />\n            </Box>\n            <Heading size='small' margin=\"none\" color={LightGrey}>LOCATION</Heading>\n            <Text>London, UK</Text>\n        </Box>\n    );\n}\n\nexport default JobViewExtraInfoSubSection;\n","import React from 'react';\nimport { Box, Heading, Text } from 'grommet';\nimport { Twitter, LinkedinOption, Instagram } from \"grommet-icons\";\nimport { LightGrey, TwitterBlue, LinkedinBlue, InstagramRed } from './colors.js';\n\nfunction JobViewSocialSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='small' margin='none' color={LightGrey}>SOCIAL</Heading>\n            <Box pad=\"none\" direction='row'>\n                <Box pad='small'>\n                    <Twitter color={TwitterBlue} />\n                </Box>\n                <Box pad='small'>\n                    <LinkedinOption color={LinkedinBlue} />\n                </Box>\n                <Box pad='small'>\n                    <Instagram color={InstagramRed} />\n                </Box>\n            </Box>\n            <Heading size='small' margin='none' color={LightGrey}>POSTED</Heading>\n            <Text>New - 2 hours ago</Text>\n        </Box>\n    );\n}\n\nexport default JobViewSocialSubSection;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Grid } from 'grommet';\n\nimport SubNavigationLink from './SubNavigationLink.js';\n\nimport JobViewRecruiterSubSection from './JobViewRecruiterSubSection.js';\nimport JobViewExtraInfoSubSection from './JobViewExtraInfoSubSection.js';\nimport JobViewSocialSubSection from './JobViewSocialSubSection.js';\n\nimport { CaretNext } from 'grommet-icons';\n\nfunction Job() {\n  let { id } = useParams();\n  fetch('https://qi827wd4q4.execute-api.eu-west-1.amazonaws.com/api/sboj-job-function')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <div>\n      <div>\n        <h1>COMPANY NAME {id}</h1>\n        <h2>Back End Developer</h2>\n      </div>\n      <Grid\n        rows={['auto', 'flex']}\n        columns={['auto', '3/4'], ['auto', '1/4']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [1, 0] },\n          { name: 'main', start: [0, 1], end: [0, 1] },\n          { name: 'side', start: [1, 1], end: [1, 1] }\n        ]}\n      >\n        <Box\n          gridArea='header'\n          direction='row'\n          align='center'\n          justify='between'\n          pad={{ horizontal: 'small', vertical: 'small' }}\n        >\n          <div>\n            <SubNavigationLink text='The Job' />\n            <SubNavigationLink text='The Benefits' />\n            <SubNavigationLink text='The Company' />\n          </div>\n        </Box>\n        <Box gridArea='main'>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            <h3>Job Responsibilities:</h3>\n            <p>\n              <CaretNext size='small' /> Responsible for delivering software end-to-end.<br />\n              <CaretNext size='small' /> Liaising with product managers and designers, to coordinating  across international development teams on engineering and  architecture, to working with our QA and dev ops teams.<br />\n              <CaretNext size='small' /> To deliver a quality, innovative product to the traders and investors who depend on our platform every day.<br />\n              <CaretNext size='small' /> Architecture, implementation, and delivery of new web-based trading UI functionality.<br />\n              <CaretNext size='small' /> Problem solving and debugging skills, especially for production issues.\n            </p>\n            <h3>Required Qualifications:</h3>\n            <p>\n              <CaretNext size='small' /> At least Bachelor's Degree, preferably in Computer Science<br />\n              <CaretNext size='small' /> At least 3 years’ professional web application development experience<br />\n              <CaretNext size='small' /> Expert-level JavaScript knowledge, and curiosity to learn more.<br />\n              <CaretNext size='small' /> Angular 2-8 – the more in-depth your understanding, the better.<br />\n              <CaretNext size='small' /> Effective communication skills to work with different teams across an international company\n            </p>\n          </Box>\n        </Box>\n        <Box fill gridArea='side' justify='top' align='center' pad={{ horizontal: 'medium', vertical: 'none' }}>\n          <JobViewRecruiterSubSection recruiter={{ name: 'Dave Smith', title: 'Head of Recruiting', organization: 'Sboj.io', rating: 3, profile_picture: '//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80' }} />\n\n          <JobViewExtraInfoSubSection />\n\n          <JobViewSocialSubSection />\n        </Box>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Job;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Box, List, Text, Avatar } from \"grommet\";\n\n\nexport const data = [\n  { name: \"Awesome job one\", to: '/job/abc', profile_picture: 'https://sboj.io/static/icons/apple-icon-152x152.png' },\n  { name: \"Awesome job two\", to: '/job/cde', profile_picture: 'https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/0008/9493/brand.gif?itok=690RQQCd' },\n  { name: \"Awesome job three\", to: '/job/xyz', profile_picture: 'https://lh3.googleusercontent.com/proxy/AoCp1qwP0kcqdtZDLob4-Wqg9SyWxsEiPsc2YHBOoJUw1TxMJZgR3HaNVwujbDi-lsWF9wQu2J1naLQQ3GoQO6TMdvPf8saMukMb' }\n];\n\nfunction Home() {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n        <h1>Jobs</h1>\n        <List data={data} pad=\"medium\">\n          {(datum, index) => (\n            <Box\n              key={index}\n              direction=\"row-responsive\"\n              gap=\"large\"\n              size=\"xsmall\"\n              align=\"center\"\n            >\n              <Link to={datum.to}>\n                <Box direction=\"row\" gap=\"small\" justify='center'>\n                  <Avatar src={datum.profile_picture} size='large' />\n                  <Text weight=\"bold\">{datum.name}</Text>\n                </Box>\n              </Link>\n            </Box>\n          )}\n        </List>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Box, TextInput, Button, RadioButton, Select } from 'grommet';\nimport { FormNextLink } from \"grommet-icons\";\n\nfunction PostSalaryBenefits() {\n  const [position, setPosition] = useState(\"\");\n  const onPositionChange = event => setPosition(event.target.value);\n\n  const [skill, setSkill] = useState(\"\");\n  const onSkillChange = event => setSkill(event.target.value);\n\n  const [selected, setSelected] = useState();\n\n  const [currency, setCurrency] = useState(\"\");\n  const [minSalary, setMinSalary] = useState(\"\");\n  const [maxSalary, setMaxSalary] = useState(\"\");\n  const [bonus, setBonus] = useState(\"\");\n  return (\n    <div>\n      <h3>Position</h3>\n      <Box width=\"medium\">\n        <TextInput value={position} onChange={onPositionChange} placeholder='Java developer' />\n      </Box>\n      <h3>Skills</h3>\n      <Box width=\"medium\">\n        <TextInput value={skill} onChange={onSkillChange} placeholder='Type a skill' />\n      </Box>\n        Smart suggestions based n other positions like yours<br />\n          tags go here\n      <h3>Employment Type</h3>\n      <Box align=\"center\" direction='row'>\n        <RadioButton\n          label=\"Permanent\"\n          name=\"name\"\n          value=\"permanent\"\n          checked={selected === \"permanent\"}\n          onChange={event => setSelected(event.target.value)}\n        />\n        <RadioButton\n          label=\"Freelance\"\n          name=\"name\"\n          value=\"freelance\"\n          checked={selected === \"freelance\"}\n          onChange={event => setSelected(event.target.value)}\n        />\n        <RadioButton\n          label=\"Part-time\"\n          name=\"name\"\n          value=\"parttime\"\n          checked={selected === \"parttime\"}\n          onChange={event => setSelected(event.target.value)}\n        />\n        <RadioButton\n          label=\"Internship\"\n          name=\"name\"\n          value=\"internship\"\n          checked={selected === \"internship\"}\n          onChange={event => setSelected(event.target.value)}\n        />\n      </Box>\n      <h3>Salary</h3>\n      <Box width=\"medium\">\n        <Select\n          options={['GBP', 'EUR', 'USD']}\n          value={currency}\n          onChange={({ option }) => setCurrency(option)}\n          placeholder='Currency'\n        />\n      </Box>\n      <Box align=\"center\" direction='row'>\n        {/* TODO: Make MaskedInputs */}\n        <TextInput value={minSalary} onChange={event => setMinSalary(event.target.value)} placeholder='50,000' />\n        <TextInput value={maxSalary} onChange={event => setMaxSalary(event.target.value)} placeholder='60,000' />\n      </Box>\n      <h3>Bonus</h3>\n      <Box width=\"medium\">\n        <TextInput value={bonus} onChange={event => setBonus(event.target.value)} placeholder='Personal Performance, Stocks...' />\n      </Box>\n      <Box direction='row' align='right'>\n        <Box align=\"center\" pad=\"medium\">\n          <Button label=\"Default\" onClick={() => { }} />\n        </Box>\n        <Box align=\"center\" pad=\"medium\">\n          <Button primary label=\"Continue\" icon={<FormNextLink />} reverse={true} onClick={() => { }} />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default PostSalaryBenefits;\n","import React from 'react';\nimport { Box } from 'grommet';\nimport PostSalaryBenefits from './PostSalaryBenefits.js';\n\nfunction Post({ checked: checkedProp, ...rest }) {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n        <p> Salary & Benefits -> Job Description -> Publish</p>\n        <PostSalaryBenefits />\n      </Box>\n    </Box>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport { Teal } from './colors.js'\n\nfunction Logo() {\n  return (\n    <h1 style={{\n      fontFamily: 'Righteous, cursive',\n      fontSize: 58,\n      fontWeight: 400,\n      color: '#424242',\n      userSelect: 'none'\n    }}>Sb<span style={{color: Teal}}>o</span>j</h1>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Logo from './Logo.js';\nimport { Box, TextInput } from \"grommet\";\nimport { Search } from \"grommet-icons\";\n\nfunction Nav() {\n  return (\n    <Box\n      gridArea=\"sidebar\"\n      background=\"#FFFFFF\"\n    >\n      <Box justify='center' align='center'>\n        <Logo />\n      </Box>\n      <Box align=\"center\" justify=\"start\" pad=\"small\">\n        <TextInput icon={<Search />} placeholder=\"search ...\" />\n      </Box>\n\n      <Box justify='center'>\n        {[\n          { text: \"Home\", href: '/' }, \n          { text: 'Jobs', href: '/jobs' },\n          { text: 'Post a Job', href: '/post' }\n        ].map(link => (\n          <NavLink className=\"side_link\" to={link.href}>\n            {link.text}\n          </NavLink>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home.js';\nimport Job from './Job.js';\nimport Jobs from './Jobs.js';\nimport Post from './Post.js';\nimport Nav from './Nav.js';\nimport { Grommet, Box, Grid } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\n\nimport { Teal } from './colors.js';\n\n\nconst myTheme = {\n  global: {\n    colors: {\n      brand: Teal,\n    },\n    font: {\n      family: 'Source Sans Pro'\n    }\n  }\n};\n\nfunction App() {\n  fetch(\"https://0jzvzdhkz4.execute-api.eu-west-1.amazonaws.com/prod/testing\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n      <Grommet full theme={{ ...grommet, ...myTheme }}>\n        <Grid\n          fill\n          rows={[\"auto\", \"flex\"]}\n          columns={[\"250px\", \"flex\"]}\n          areas={[\n            { name: \"sidebar\", start: [0, 1], end: [0, 1] },\n            { name: \"main\", start: [1, 1], end: [1, 1] }\n          ]}\n        >\n          <Nav />\n          <Box gridArea=\"main\" background=\"#EEEEEE\" pad='medium'>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/job/:id\" component={Job} />\n          </Box>\n        </Grid>\n      </Grommet>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}