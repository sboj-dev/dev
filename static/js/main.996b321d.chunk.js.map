{"version":3,"sources":["Home.js","JobViewRecruiterSubSection.js","global/colors.js","global/tags/TechTag.js","JobViewExtraInfoSubSection.js","JobViewSocialSubSection.js","global/styles.js","Job.js","Jobs.js","global/buttons/BackButton.js","PostSalaryBenefits.js","Post.js","global/Logo.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","Box","gridArea","fill","background","justify","align","pad","margin","Yoga","size","JobViewRecruiterSubSection","params","direction","gap","Avatar","src","recruiter","profile_picture","name","style","fontWeight","fontSize","color","title","organization","Array","rating","map","Star","TechTag","backgroundColor","border","padding","textAlign","textDecoration","display","borderRadius","label","JobViewExtraInfoSubSection","Heading","href","website","techStack","text","Text","location","JobViewSocialSubSection","Button","plain","icon","Twitter","social","twitter","target","LinkedinOption","linkedin","Instagram","instagram","SBOJTheme","brand","light","font","family","button","disabled","extend","CustomizeTheme","customTheme","console","log","grommet","names","pictures","getRandomInt","min","max","Math","ceil","floor","random","Job","useParams","id","fetch","then","res","json","result","React","useState","index","setIndex","theme","tab","active","css","tabs","randomName","length","randomPicture","jobSpec","company","position","description","responsibilities","experiences","salary","employment","otherBenefits","Grid","rows","columns","areas","start","end","horizontal","vertical","Grommet","Tabs","activeIndex","onActive","nextIndex","Tab","CaretNext","data","to","List","datum","key","weight","BackButton","onClick","PostSalaryBenefits","setPosition","skill","setSkill","selected","setSelected","currency","setCurrency","minSalary","setMinSalary","maxSalary","setMaxSalary","bonus","setBonus","width","TextInput","value","onChange","event","placeholder","RadioButton","checked","Select","options","option","primary","FormNextLink","reverse","Post","Logo","fontFamily","userSelect","Nav","Search","link","className","App","basename","process","full","exact","path","component","Jobs","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.996b321d.chunk.js","sourcesContent":["import React from 'react';\nimport { Box } from 'grommet';\nimport { Yoga } from 'grommet-icons';\n\nfunction Home() {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' justify='center' align='center' pad='xlarge' margin='small'>\n        <Yoga size='xlarge' />\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Box, Avatar } from 'grommet';\nimport { Star } from \"grommet-icons\";\nimport { Grey } from './global/colors';\n\nfunction JobViewRecruiterSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Box direction=\"row\" gap=\"small\">\n                <Avatar src={params.recruiter.profile_picture} size='large' />\n                <div>\n                    <div>{params.recruiter.name}</div>\n                    <div style={{\n                        fontWeight: 'bold',\n                        fontSize: 14,\n                        color: Grey,\n                    }}>{params.recruiter.title} @ {params.recruiter.organization}</div>\n                    <div>\n                        {[...Array(params.recruiter.rating)].map(name => (\n                            <Star color={Grey} size='small' />\n                        ))}\n                    </div>\n                </div>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewRecruiterSubSection;\n","export const Charchoal = '#444444'\nexport const LightGrey = '#BABABA'\nexport const Grey = '#7D7D7D'\nexport const Teal = '#08CAA1'\nexport const Purple = '#956EDC'\nexport const Lilac = '#B291F2'\nexport const White = '#FFFFFF'\n\nexport const TwitterBlue = '#03A9F3'\nexport const LinkedinBlue = '#006699'\nexport const InstagramRed = '#FF0700'","import React from 'react'\nimport { Purple, White } from '../colors'\n\nfunction TechTag(params) {\n  return (\n    <div style={{\n      backgroundColor: Purple,\n      border: 'none',\n      color: White,\n      margin: 4,\n      padding: '4px 8px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-block',\n      borderRadius: '16px',\n      fontSize: '12px'\n    }}>\n      {params.label}\n    </div>\n  );\n}\n\nexport default TechTag","import React from 'react';\nimport { Box, Heading, Text } from 'grommet';\nimport { LightGrey } from './global/colors';\nimport TechTag from './global/tags/TechTag'\n\nfunction JobViewExtraInfoSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='18px' margin=\"none\" color={LightGrey}>WEBSITE</Heading>\n            <Box pad=\"small\" direction='row'>\n                <a href={params.website}>{params.website}</a>\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>TECH STACK</Heading>\n            <Box align=\"center\" direction='row'>\n                {params.techStack && params.techStack.map(text => (\n                    <TechTag label={text} />\n                ))}\n            </Box>\n            <Heading size='18px' margin=\"none\" color={LightGrey}>LOCATION</Heading>\n            <Box pad=\"small\" direction='row'>\n                <Text>{params.location}</Text>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewExtraInfoSubSection;\n","import React from 'react';\nimport { Box, Heading, Text, Button } from 'grommet';\nimport { Twitter, LinkedinOption, Instagram } from \"grommet-icons\";\nimport { LightGrey, TwitterBlue, LinkedinBlue, InstagramRed } from './global/colors';\n\nfunction JobViewSocialSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='18px' margin='none' color={LightGrey}>SOCIAL</Heading>\n            <Box pad=\"none\" direction='row'>\n                <Box pad='small'>\n                    <Button plain icon={<Twitter color={TwitterBlue} />} href={params.social.twitter} target='_blank' />\n                </Box>\n                <Box pad='small'>\n                    <Button plain icon={<LinkedinOption color={LinkedinBlue} />} href={params.social.linkedin} target='_blank' />\n                </Box>\n                <Box pad='small'>\n                    <Button plain icon={<Instagram color={InstagramRed} />} href={params.social.instagram} target='_blank' />\n                </Box>\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>POSTED</Heading>\n            <Box pad=\"small\" direction='row'>\n                <Text>New - 2 hours ago</Text>\n            </Box>\n            <Heading size='18px' margin='none' color={LightGrey}>EMPLOYMENT</Heading>\n            <Box pad=\"small\" direction='row'>\n                <Text>Permanent</Text>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewSocialSubSection;\n","import { Teal, Charchoal, Purple, White } from './colors';\nimport { grommet } from \"grommet/themes\";\n\nexport const SBOJTheme = {\n  \"global\": {\n    \"colors\": {\n      brand: Teal,\n      \"accent-1\": Purple,\n      text: {\n        light: Charchoal\n      }\n    },\n    font: {\n      family: 'Source Sans Pro',\n    }\n  },\n  button: {\n    color: White,\n    disabled: {\n      color: \"orange\",\n      border: {\n        color: \"orange\"\n      },\n      extend: `border: 10px dashed red;`\n    }\n  }\n};\n\nexport const CustomizeTheme = (customTheme) => {\n  console.log({ ...SBOJTheme, ...customTheme })\n  return { ...grommet, ...SBOJTheme, ...customTheme }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Grid, Tabs, Tab, Grommet } from 'grommet';\n\nimport JobViewRecruiterSubSection from './JobViewRecruiterSubSection';\nimport JobViewExtraInfoSubSection from './JobViewExtraInfoSubSection';\nimport JobViewSocialSubSection from './JobViewSocialSubSection';\nimport { css } from 'styled-components'\n\nimport { CaretNext } from 'grommet-icons';\nimport { LightGrey } from './global/colors'\nimport { CustomizeTheme } from './global/styles';\n\nconst names = [\n  \"Jadon Kaufman\",\n  \"Ellesse Bravo\",\n  \"Claudia Sheldon\",\n  \"Kelsi Huffman\",\n  \"Jamelia Arroyo\",\n  \"Armaan Barr\",\n  \"Arielle Zavala\",\n  \"Ronny Talley\",\n  \"Federico Hooper\",\n  \"Beverly O'Reilly\"\n];\n\nconst pictures = [\n  \"https://cdn.fastly.picmonkey.com/contentful/h6goo9gw1hh6/2sNZtFAWOdP1lmQ33VwRN3/24e953b920a9cd0ff2e1d587742a2472/1-intro-photo-final.jpg?w=800&q=70\",\n  \"https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-4.png\",\n  \"https://www.suelaceyphotography.com/v/p/QDTKd4AO9ofE9HwbZ5v5anz7-business-profile-shots-img-0241-1582334654.jpg\",\n  \"https://i.insider.com/5899ffcf6e09a897008b5c04?width=600&format=jpeg&auto=webp\",\n  \"https://sites.psu.edu/iabcpennstate/wp-content/uploads/sites/18140/2015/01/professional-woman-4.jpg\",\n  \"https://cathleo.com.au/wp-content/uploads/2016/03/Profiles-UnisA-5.jpg\",\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsBvTHtysWxzGWd0e3yTig65uzlDf1ZsBUKoDhB-w7nkyVyOV9&usqp=CAU\",\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSwNvj0HEnOYsY5Ny0qcuf1BDJXOEQnMEqHsHQC4ocbMR6FSwpP&usqp=CAU\",\n  \"https://ocbj.media.clients.ellingtoncms.com/img/photos/2011/06/03/SR_Profile_Ken_Sullivan_6-6_t670.jpg?b3f6a5d7692ccc373d56e40cf708e3fa67d9af9d\",\n  \"https://www.joscottimages.co.uk/_webedit/cached-images/263-0-0-893-10000-7451-612.jpg\"\n];\n\nfunction Job() {\n  let { id } = useParams();\n  fetch('https://qi827wd4q4.execute-api.eu-west-1.amazonaws.com/api/sboj-job-function')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n\n  const [index, setIndex] = React.useState();\n\n  const theme = {\n    tab: {\n      active: {\n        color: \"dark-1\"\n      },\n      color: \"accent-1\",\n      border: {\n        color: \"accent-1\"\n      },\n      size: '250px',\n      extend: ({ theme }) => css`\n      font-weight: bold;\n      width: 200px;\n    `\n    },\n    tabs: {\n      gap: \"medium\",\n    }\n  }\n\n  const onActive = nextIndex => setIndex(nextIndex);\n\n  const randomName = names[Math.floor(Math.random() * names.length)];\n  const randomPicture = pictures[Math.floor(Math.random() * pictures.length)];\n\n  const jobSpec = {\n    company: {\n      website: 'www.sapcompany.com',\n      location: 'London, UK',\n      techStack: [\n        'SAP',\n        'ABAP', \n        'Ui5'\n      ]\n    },\n    recruiter: {\n      name: randomName,\n      title: 'Head of Recruiting',\n      organization: 'Sboj.io',\n      rating: getRandomInt(1, 5),\n      profile_picture: randomPicture\n    },\n    position: 'Inhouse SAP ABAP Developer',\n    description: 'A global end user in the Consulting industry is seeking a talented and professional ABAP developer for their HQ in the Cologne Area.',\n    responsibilities: [\n      'Software development in the SAP ERP environment with the aid of all available development environments',\n      'Customisation of the functional SAP modules FI/CO',\n      'Interface programming and form design with SAP Script / Smartforms',\n      'Ensuring stability and availability of the SAP environment including the interfaces through standardised change and test management',\n      'Provide 1st and 2nd level support'\n    ],\n    experiences: [\n      '2-5 Years Cross-Module customisation Ideally with in FI/CO',\n      'Excellent understanding of ABAP and ABAP OO as well as project management knowledge',\n      'Able to work independently ',\n      'A hunger to grow and learn newer technologies',\n      'Conversational German and Fluent English'\n\n    ],\n    salary: '£40,000 - £50,000',\n    employment: 'Permanent',\n    otherBenefits: [\n      'Health Care (Private)',\n      'Free Fruit and Coffee',\n      'Travel loan',\n      'Quarterly company parties',\n      'Gym Membership',\n    ]\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>COMPANY NAME</h1>\n        <h2 style={{ color: LightGrey }}>{jobSpec.position}</h2>\n      </div>\n      <Grid\n        rows={['auto', 'flex']}\n        columns={['auto', '3/4'], ['auto', '1/4']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [1, 0] },\n          { name: 'main', start: [0, 1], end: [0, 1] },\n          { name: 'side', start: [1, 1], end: [1, 1] }\n        ]}\n      >\n        <Box\n          gridArea='header'\n          direction='row'\n          align='center'\n          justify='between'\n          pad={{ horizontal: 'small', vertical: 'small' }}\n        >\n        </Box>\n        <Grommet theme={CustomizeTheme(theme)}>\n          <Tabs activeIndex={index} onActive={onActive} justify=\"left\">\n            <Tab title=\"The Job\">\n              <Box gridArea='main'>\n                <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n                  <h3>Job Responsibilities:</h3>\n                  <p>\n                    {jobSpec.responsibilities.map(text => (\n                      <div>\n                        <CaretNext size='small' /> {text}\n                      </div>\n                    ))}\n            </p>\n                  <h3>Required Experience:</h3>\n                  <p>\n                  {jobSpec.experiences.map(text => (\n                      <div>\n                        <CaretNext size='small' /> {text}\n                      </div>\n                    ))}\n            </p>\n                </Box>\n              </Box>\n            </Tab>\n            <Tab title=\"The Benefits\">\n              <Box gridArea='main'>\n                <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n                  The benefits go here\n          </Box>\n              </Box>\n            </Tab>\n            <Tab title=\"The Company\">\n              <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n                The company goes here\n          </Box>\n            </Tab>\n          </Tabs>\n        </Grommet>\n        <Box fill gridArea='side' justify='top' align='center' pad={{ horizontal: 'medium', vertical: 'none' }}>\n          <JobViewRecruiterSubSection recruiter={jobSpec.recruiter}\n          />\n\n          <JobViewExtraInfoSubSection \n          website={jobSpec.company.website} \n          techStack={jobSpec.company.techStack} \n          location={jobSpec.company.location}\n          />\n\n          <JobViewSocialSubSection social={{\n            linkedin: 'https://www.linkedin.com/in/ben-cockin/',\n            twitter: 'https://twitter.com/BurgerKing',\n            instagram: 'https://www.instagram.com/realsophiarobot/?hl=en'\n          }}\n          />\n        </Box>\n      </Grid>\n    </div>\n  );\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default Job;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Box, List, Text, Avatar } from \"grommet\";\n\n\nexport const data = [\n  { name: \"Awesome job one\", to: '/job/abc', profile_picture: 'https://sboj.io/static/icons/apple-icon-152x152.png' },\n  { name: \"Awesome job two\", to: '/job/cde', profile_picture: 'https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/0008/9493/brand.gif?itok=690RQQCd' },\n  { name: \"Awesome job three\", to: '/job/xyz', profile_picture: 'https://lh3.googleusercontent.com/proxy/AoCp1qwP0kcqdtZDLob4-Wqg9SyWxsEiPsc2YHBOoJUw1TxMJZgR3HaNVwujbDi-lsWF9wQu2J1naLQQ3GoQO6TMdvPf8saMukMb' }\n];\n\nfunction Home() {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n        <h1>Jobs</h1>\n        <List data={data} pad=\"medium\">\n          {(datum, index) => (\n            <Box\n              key={index}\n              direction=\"row-responsive\"\n              gap=\"large\"\n              size=\"xsmall\"\n              align=\"center\"\n            >\n              <Link to={datum.to}>\n                <Box direction=\"row\" gap=\"small\" justify='center'>\n                  <Avatar src={datum.profile_picture} size='large' />\n                  <Text weight=\"bold\">{datum.name}</Text>\n                </Box>\n              </Link>\n            </Box>\n          )}\n        </List>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n","import React from 'react'\nimport { Grommet, Button } from 'grommet'\nimport { CustomizeTheme } from '../styles'\n\nfunction BackButton(params) {\n  return (\n    <Grommet theme={CustomizeTheme({\n      button: {\n        color: 'brand'\n      }\n    })}>\n      <Button label=\"Back\" onClick={params.onClick} />\n    </Grommet>\n  );\n}\n\nexport default BackButton","import React, { useState } from 'react';\nimport { Box, TextInput, Button, RadioButton, Select } from 'grommet';\nimport { FormNextLink } from \"grommet-icons\";\nimport BackButton from './global/buttons/BackButton'\nimport { White } from './global/colors'\n\nfunction PostSalaryBenefits() {\n  const [position, setPosition] = useState(\"\");\n  const onPositionChange = event => setPosition(event.target.value);\n\n  const [skill, setSkill] = useState(\"\");\n  const onSkillChange = event => setSkill(event.target.value);\n\n  const [selected, setSelected] = useState();\n\n  const [currency, setCurrency] = useState(\"\");\n  const [minSalary, setMinSalary] = useState(\"\");\n  const [maxSalary, setMaxSalary] = useState(\"\");\n  const [bonus, setBonus] = useState(\"\");\n  return (\n    <div>\n      <h3>Position</h3>\n      <Box width=\"medium\">\n        <TextInput value={position} onChange={onPositionChange} placeholder='Java developer' />\n      </Box>\n      <h3>Skills</h3>\n      <Box width=\"medium\">\n        <TextInput value={skill} onChange={onSkillChange} placeholder='Type a skill' />\n      </Box>\n        Smart suggestions based n other positions like yours<br />\n          tags go here\n      <h3>Employment Type</h3>\n      <Box align=\"center\" direction='row'>\n        <Box margin='small'>\n          <RadioButton\n            label=\"Permanent\"\n            name=\"name\"\n            value=\"permanent\"\n            checked={selected === \"permanent\"}\n            onChange={event => setSelected(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label=\"Freelance\"\n            name=\"name\"\n            value=\"freelance\"\n            checked={selected === \"freelance\"}\n            onChange={event => setSelected(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label=\"Part-time\"\n            name=\"name\"\n            value=\"parttime\"\n            checked={selected === \"parttime\"}\n            onChange={event => setSelected(event.target.value)}\n          />\n        </Box>\n        <Box margin='small'>\n          <RadioButton\n            label=\"Internship\"\n            name=\"name\"\n            value=\"internship\"\n            checked={selected === \"internship\"}\n            onChange={event => setSelected(event.target.value)}\n          />\n        </Box>\n      </Box>\n      <h3>Salary</h3>\n      <Box width=\"medium\">\n        <Select\n          options={['GBP', 'EUR', 'USD']}\n          value={currency}\n          onChange={({ option }) => setCurrency(option)}\n          placeholder='Currency'\n        />\n      </Box>\n      <Box align=\"center\" direction='row'>\n        {/* TODO: Make MaskedInputs */}\n        <TextInput value={minSalary} onChange={event => setMinSalary(event.target.value)} placeholder='50,000' />\n        <TextInput value={maxSalary} onChange={event => setMaxSalary(event.target.value)} placeholder='60,000' />\n      </Box>\n      <h3>Bonus</h3>\n      <Box width=\"medium\">\n        <TextInput value={bonus} onChange={event => setBonus(event.target.value)} placeholder='Personal Performance, Stocks...' />\n      </Box>\n      <Box direction='row' align='right'>\n        <Box align=\"center\" pad=\"medium\">\n          <BackButton onClick={() => { }} />\n        </Box>\n        <Box align=\"center\" pad=\"medium\">\n          <Button primary label=\"Continue\" icon={<FormNextLink color={White} />} reverse={true} onClick={() => { }} />\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default PostSalaryBenefits;","import React from 'react';\nimport { Box } from 'grommet';\nimport PostSalaryBenefits from './PostSalaryBenefits';\n\nfunction Post({ checked: checkedProp, ...rest }) {\n  return (\n    <Box gridArea='main'>\n      <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n        <p> Salary & Benefits -> Job Description -> Publish</p>\n        <PostSalaryBenefits />\n      </Box>\n    </Box>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport { Teal } from './colors'\n\nfunction Logo() {\n  return (\n    <h1 style={{\n      fontFamily: 'Righteous, cursive',\n      fontSize: 58,\n      fontWeight: 400,\n      color: '#424242',\n      userSelect: 'none'\n    }}>Sb<span style={{color: Teal}}>o</span>j</h1>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\nimport Logo from './global/Logo';\nimport { Box, TextInput } from \"grommet\";\nimport { Search } from \"grommet-icons\";\n\nfunction Nav() {\n  return (\n    <Box\n      gridArea=\"sidebar\"\n      background=\"#FFFFFF\"\n    >\n      <Box justify='center' align='center'>\n        <Logo />\n      </Box>\n      <Box align=\"center\" justify=\"start\" pad=\"small\">\n        <TextInput icon={<Search />} placeholder=\"search ...\" />\n      </Box>\n\n      <Box justify='center'>\n        {[\n          { text: \"Home\", href: '/' }, \n          { text: 'Jobs', href: '/jobs' },\n          { text: 'Post a Job', href: '/post' }\n        ].map(link => (\n          <NavLink className=\"side_link\" to={link.href}>\n            {link.text}\n          </NavLink>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Job from './Job';\nimport Jobs from './Jobs';\nimport Post from './Post';\nimport Nav from './Nav';\nimport { Grommet, Box, Grid } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\n\nimport { SBOJTheme } from './global/styles';\n\nfunction App() {\n  fetch(\"https://0jzvzdhkz4.execute-api.eu-west-1.amazonaws.com/prod/testing\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n      <Grommet full theme={{ ...grommet, ...SBOJTheme }}>\n        <Grid\n          fill\n          rows={[\"auto\", \"flex\"]}\n          columns={[\"250px\", \"flex\"]}\n          areas={[\n            { name: \"sidebar\", start: [0, 1], end: [0, 1] },\n            { name: \"main\", start: [1, 1], end: [1, 1] }\n          ]}\n        >\n          <Nav />\n          <Box gridArea=\"main\" background=\"#EEEEEE\" pad='medium'>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/post\" component={Post} />\n            <Route exact path=\"/job/:id\" component={Job} />\n          </Box>\n        </Grid>\n      </Grommet>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}