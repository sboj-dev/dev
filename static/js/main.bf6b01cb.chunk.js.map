{"version":3,"sources":["Home.js","SubNavigationLink.js","colors.js","JobViewRecruiterSubSection.js","JobViewExtraInfoSubSection.js","JobViewSocialSubSection.js","Job.js","Logo.js","App.js","serviceWorker.js","index.js"],"names":["Home","to","SubNavigationLink","params","style","display","paddingBottom","marginRight","borderBottom","width","color","fontWeight","text","JobViewRecruiterSubSection","Box","fill","background","gridArea","pad","margin","direction","gap","Avatar","src","recruiter","profile_picture","size","name","fontSize","title","organization","Array","rating","map","Star","JobViewExtraInfoSubSection","Heading","Text","align","Button","primary","label","onClick","JobViewSocialSubSection","Twitter","LinkedinOption","Instagram","Job","id","useParams","fetch","then","res","json","result","console","log","Grid","rows","columns","areas","start","end","justify","horizontal","vertical","Logo","fontFamily","userSelect","App","basename","process","Grommet","full","theme","grommet","TextInput","icon","Search","placeholder","href","link","key","hoverIndicator","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf6b01cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  return (\n      <div>\n          <h1>Jobs</h1>\n          <Link to=\"/job/abc\">Awesome job one</Link><br />\n          <Link to=\"/job/cde\">Awesome job two</Link><br />\n          <Link to=\"/job/123\">Awesome job three</Link><br />\n      </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Purple } from './colors.js'\n\nfunction SubNavigationLink(params) {\n  return (\n    <div style={{\n        display:'inline-block',\n        paddingBottom: 10,\n        marginRight: 20,\n        borderBottom: '1px solid #9060EA',\n        width: 150,\n        color: Purple,\n        fontWeight: 'bold'\n    }}>{params.text}</div>\n  );\n}\n\nexport default SubNavigationLink;\n","export const LightGrey = '#BDBDBD'\nexport const Grey = '#7D7D7D'\nexport const Purple = '#9060EA'\nexport const Teal = '#424242'","import React from 'react';\nimport { Box, Avatar } from 'grommet';\nimport { Star } from \"grommet-icons\";\nimport { Grey } from './colors.js';\n\nfunction JobViewRecruiterSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Box direction=\"row\" gap=\"small\">\n                <Avatar src={params.recruiter.profile_picture} size='large' />\n                <div>\n                    <div>{params.recruiter.name}</div>\n                    <div style={{\n                        fontWeight: 'bold',\n                        fontSize: 14,\n                        color: Grey,\n                    }}>{params.recruiter.title} @ {params.recruiter.organization}</div>\n                    <div>\n                        {[...Array(params.recruiter.rating)].map(name => (\n                            <Star color={Grey} size='small' />\n                        ))}\n                    </div>\n                </div>\n            </Box>\n        </Box>\n    );\n}\n\nexport default JobViewRecruiterSubSection;\n","import React from 'react';\nimport { Box, Button, Heading, Text } from 'grommet';\nimport { LightGrey, Purple } from './colors.js';\n\nfunction JobViewExtraInfoSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='small' margin=\"none\" color={LightGrey}>WEBSITE</Heading>\n            <Text>www.sboj.io</Text>\n            <Heading size='small' margin='none' color={LightGrey}>TECH STACK</Heading>\n            <Box align=\"center\" pad=\"medium\">\n              <Button  primary label=\"Javascript\" color={Purple} onClick={() => { }} />\n              <Button primary label=\"Python\" color={Purple} onClick={() => { }} />\n              <Button primary label=\"React\" color={Purple} onClick={() => { }} />\n            </Box>\n            <Heading size='small' margin=\"none\" color={LightGrey}>LOCATION</Heading>\n            <Text>London, UK</Text>\n        </Box>\n    );\n}\n\nexport default JobViewExtraInfoSubSection;\n","import React from 'react';\nimport { Box, Heading, Text } from 'grommet';\nimport { Twitter, LinkedinOption, Instagram } from \"grommet-icons\";\nimport { LightGrey } from './colors.js';\n\nfunction JobViewSocialSubSection(params) {\n    return (\n        <Box fill='horizontal' background='#FFFFFF' gridArea='side' pad='small' margin='small'>\n            <Heading size='small' margin='none' color={LightGrey}>SOCIAL</Heading>\n            <Box align=\"center\" pad=\"medium\" direction='row'>\n                <Twitter color='#03A9F3' size='small' />\n                <LinkedinOption color='#006699' size='small' />\n                <Instagram color='#FF0700' size='small' />\n            </Box>\n            <Heading size='small' margin='none' color={LightGrey}>POSTED</Heading>\n            <Text>New - 2 hours ago</Text>\n        </Box>\n    );\n}\n\nexport default JobViewSocialSubSection;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Grid } from 'grommet';\n\nimport SubNavigationLink from './SubNavigationLink.js';\n\nimport JobViewRecruiterSubSection from './JobViewRecruiterSubSection.js';\nimport JobViewExtraInfoSubSection from './JobViewExtraInfoSubSection.js';\nimport JobViewSocialSubSection from './JobViewSocialSubSection.js';\n\nfunction Job() {\n  let { id } = useParams();\n  fetch('https://qi827wd4q4.execute-api.eu-west-1.amazonaws.com/api/sboj-job-function')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <div>\n      <div>\n        <h1>COMPANY NAME {id}</h1>\n        <h2>Back End Developer</h2>\n      </div>\n      <Grid\n        rows={['auto', 'flex']}\n        columns={['auto', '3/4'], ['auto', '1/4']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [1, 0] },\n          { name: 'main', start: [0, 1], end: [0, 1] },\n          { name: 'side', start: [1, 1], end: [1, 1] }\n        ]}\n      >\n        <Box\n          gridArea='header'\n          direction='row'\n          align='center'\n          justify='between'\n          pad={{ horizontal: 'small', vertical: 'small' }}\n        >\n          <div>\n            <SubNavigationLink text='The Job' />\n            <SubNavigationLink text='The Benefits' />\n            <SubNavigationLink text='The Company' />\n          </div>\n        </Box>\n        <Box gridArea='main'>\n          <Box fill background='#FFFFFF' gridArea='main' pad='small' margin='small'>\n            <h3>Job Responsibilities:</h3>\n            <p>\n              ● Responsible for delivering software end-to-end.<br />\n              ● Liaising with product managers and designers, to coordinating  across international development teams on engineering and  architecture, to working with our QA and dev ops teams.<br />\n              ● To deliver a quality, innovative product to the traders and investors who depend on our platform every day.<br />\n              ● Architecture, implementation, and delivery of new web-based trading UI functionality.<br />\n              ● Problem solving and debugging skills, especially for production issues.\n            </p>\n            <h3>Required Qualifications:</h3>\n            <p>\n              ● At least Bachelor's Degree, preferably in Computer Science<br />\n              ● At least 3 years’ professional web application development experience<br />\n              ● Expert-level JavaScript knowledge, and curiosity to learn more.<br />\n              ● Angular 2-8 – the more in-depth your understanding, the better.<br />\n              ● Effective communication skills to work with different teams across an international company\n            </p>\n          </Box>\n        </Box>\n        <Box fill gridArea='side' justify='top' align='center' pad={{ horizontal: 'medium', vertical: 'none' }}>\n          <JobViewRecruiterSubSection recruiter={{name:'Dave Smith', title: 'Head of Recruiting', organization:'Sboj.io', rating: 3, profile_picture:'//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80'}} />\n\n          <JobViewExtraInfoSubSection />\n\n          <JobViewSocialSubSection />\n        </Box>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Job;\n","import React from 'react';\nimport { Teal } from './colors.js'\n\nfunction Logo() {\n  return (\n    <h1 style={{\n      fontFamily: 'Righteous, cursive',\n      fontSize: 58,\n      fontWeight: 400,\n      color: Teal,\n      userSelect: 'none'\n    }}>Sb<span style={{color: '#08CAA0'}}>o</span>j</h1>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home.js';\nimport Job from './Job.js';\nimport Logo from './Logo.js';\nimport { Grommet, Box, Button, Grid, Text, TextInput } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport { Search } from \"grommet-icons\";\n\nfunction App() {\n  fetch(\"https://0jzvzdhkz4.execute-api.eu-west-1.amazonaws.com/prod/testing\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n      })\n  return (\n    <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\n      <Grommet full theme={grommet}>\n        <Grid\n          fill\n          rows={[\"auto\", \"flex\"]}\n          columns={[\"auto\", \"flex\"]}\n          areas={[\n            { name: \"sidebar\", start: [0, 1], end: [0, 1] },\n            { name: \"main\", start: [1, 1], end: [1, 1] }\n          ]}\n        >\n          <Box\n            gridArea=\"sidebar\"\n            background=\"#FFFFFF\"\n            width=\"medium\"\n          >\n            <Box justify='center' align='center'>\n              <Logo />\n            </Box>\n            <Box align=\"center\" justify=\"start\" pad=\"large\">\n              <TextInput icon={<Search />} placeholder=\"search ...\" />\n            </Box>\n\n            <Box justify='center'>\n              {[{text: \"Home\", href: '#'}, {text: 'Jobs', href: '/jobs'}].map(link => (\n                <Button key={link.text} href={link.href} hoverIndicator>\n                  <Box pad={{ horizontal: \"medium\", vertical: \"small\" }}>\n                    <Text>{link.text}</Text>\n                  </Box>\n                </Button>\n              ))}\n            </Box>\n          </Box>\n          <Box gridArea=\"main\" background=\"#EEEEEE\" pad='medium'>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/jobs\" component={Home} />\n            <Route exact path=\"/job/:id\" component={Job} />\n          </Box>\n        </Grid>\n      </Grommet>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}